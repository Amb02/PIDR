Linear part:
exp(exp(g,x),y) = exp(exp(g,y),x)
Completing equations...
Completed equations:
exp(exp(g,x),y) = exp(exp(g,y),x)
Convergent part:
Completing equations...
Completed equations:
Process 0 (that is, the initial process):
{1}let TTPEncKey: pkey = pk(TTPDecKey) in
{2}out(c, TTPEncKey);
{3}let TTPVerKey: spkey = Spk(TTPSigKey) in
{4}out(c, TTPVerKey);
{5}let Rname: host = PasswdTable(Rpwd) in
{6}out(c, Rname);
(
    {7}!
    {8}in(c, recipient: host);
    {9}in(c, (sauth: authtag,ttpauth: authtag));
    {10}new msgid: messageid;
    {11}let m: bitstring = Message(recipient,msgid,(sauth,ttpauth)) in
    {12}new k: key;
    {13}new qtmp: tquery;
    {14}let q: tquery = getAuthQ(qtmp,sauth) in
    {15}let r: reply = getAuthR(Reply(recipient,qtmp),sauth) in
    {16}let em: bitstring = E(k,m) in
    {17}let hs: key = H((cleartext,q,r,em)) in
    {18}let S2TTP: bitstring = A(TTPEncKey,(Sname,(sauth,ttpauth),(Give,k,recipient,hs))) in
    {19}event Shas(Sname,k,cleartext,q,r,m);
    {20}out(recipient, (TTPname,em,(sauth,ttpauth),cleartext,q,S2TTP));
    {21}!
    {22}in(Sname, inmess4: tcertif);
    {23}if (ttpauth = Auth) then
    (
        {24}let (=Released,=S2TTP,=recipient) = checkS(TTPVerKey,inmess4) in
            {25}event SThinksRhas(m)
        else
            {26}out(Sname, inmess4)
    )
    else
        {27}let (=Released,=S2TTP) = checkS(TTPVerKey,inmess4) in
            {28}event SThinksRhas(m)
        else
            {29}out(Sname, inmess4)
) | (
    {30}!
    0
) | (
    {31}!
    {32}new dhsecretR: exponent;
    {33}let dhpublicR: G = exp(g,dhsecretR) in
    {34}out(TTPname, Rname);
    {35}out(TTPname, (KEXDHINIT,dhpublicR));
    {36}in(Rname, (=KEXDHREPLY,=TTPVerKey,dhpublicTTP: G,sign: bitstring));
    {37}let K: G = exp(dhpublicTTP,dhsecretR) in
    {38}let h: key = H((TTPVerKey,dhpublicR,dhpublicTTP,K)) in
    {39}if (checknmrS(TTPVerKey,sign,h) = true) then
    {40}let enckeyRtoTTP: key = H((K,h,keyEncRtoTTP)) in
    {41}let enckeyTTPtoR: key = H((K,h,keyEncTTPtoR)) in
    {42}let mackeyRtoTTP: key = H((K,h,keyMacRtoTTP)) in
    {43}let mackeyTTPtoR: key = H((K,h,keyMacTTPtoR)) in
    {44}let idTTPtoR: idttpr = id_for_host_key_key(Rname,enckeyTTPtoR,mackeyTTPtoR) in
    {45}new RsecchannelToTTP: channel;
    {46}new RsecchannelFromTTP: channel;
    (
        {47}!
        {48}in(RsecchannelToTTP, m2payload: bitstring);
        {49}out(TTPname, (E(enckeyRtoTTP,m2payload),mac(mackeyRtoTTP,m2payload)))
    ) | (
        {50}!
        {51}in(Rname, (m4enc: bitstring,m4mac: bitstring));
        {52}let m4payload: bitstring = decE(enckeyTTPtoR,m4enc) in
        {53}if (m4mac = mac(mackeyTTPtoR,m4payload)) then
        {54}out(RsecchannelFromTTP, m4payload)
    ) | (
        {55}in(Rname, (=TTPname,em2: bitstring,(sauth_1: authtag,ttpauth_1: authtag),cleartext2: bitstring,q2: tquery,S2TTP2: bitstring));
        {56}let r2: reply = getAuthR(Reply(Rname,q2),sauth_1) in
        {57}let hr: key = H((cleartext2,q2,r2,em2)) in
        {58}event Rhas(idTTPtoR,em2,hr);
        {59}out(RsecchannelToTTP, (S2TTP2,(Wants,getAuthP(Rpwd,ttpauth_1),hr)));
        {60}!
        {61}in(RsecchannelFromTTP, (=Try,k3: key,=hr));
        {62}let m3: bitstring = decE(k3,em2) in
        {63}event Rreceived(m3)
    )
) | (
    {64}!
    {65}in(TTPname, receivername: host);
    {66}in(TTPname, (=KEXDHINIT,dhpublicR_1: G));
    {67}new dhsecretTTP: exponent;
    {68}let dhpublicTTP_1: G = exp(g,dhsecretTTP) in
    {69}let K_1: G = exp(dhpublicR_1,dhsecretTTP) in
    {70}let h_1: key = H((TTPVerKey,dhpublicR_1,dhpublicTTP_1,K_1)) in
    {71}out(receivername, (KEXDHREPLY,TTPVerKey,dhpublicTTP_1,nmrS(TTPSigKey,h_1)));
    {72}let enckeyRtoTTP_1: key = H((K_1,h_1,keyEncRtoTTP)) in
    {73}let enckeyTTPtoR_1: key = H((K_1,h_1,keyEncTTPtoR)) in
    {74}let mackeyRtoTTP_1: key = H((K_1,h_1,keyMacRtoTTP)) in
    {75}let mackeyTTPtoR_1: key = H((K_1,h_1,keyMacTTPtoR)) in
    {76}let idTTPtoR_1: idttpr = id_for_host_key_key(receivername,enckeyTTPtoR_1,mackeyTTPtoR_1) in
    {77}new TTPsecchannelToR: channel;
    {78}new TTPsecchannelFromR: channel;
    (
        {79}!
        {80}in(TTPsecchannelToR, m3payload: bitstring);
        {81}out(receivername, (E(enckeyTTPtoR_1,m3payload),mac(mackeyTTPtoR_1,m3payload)))
    ) | (
        {82}!
        {83}in(TTPname, (m2enc: bitstring,m2mac: bitstring));
        {84}let m2payload_1: bitstring = decE(enckeyRtoTTP_1,m2enc) in
        {85}if (m2mac = mac(mackeyRtoTTP_1,m2payload_1)) then
        {86}out(TTPsecchannelFromR, m2payload_1)
    ) | (
        {87}in(TTPsecchannelFromR, (S2TTP3: bitstring,(=Wants,RPwd3: passwd,hr3: key)));
        {88}let (Sname3: host,(sauth3: authtag,ttpauth3: authtag),(=Give,k3_1: key,R3: host,=hr3)) = decA(TTPDecKey,S2TTP3) in
        {89}if (R3 = receivername) then
        {90}if ((ttpauth3,R3) = (Auth,PasswdTable(RPwd3))) then
            {91}event TTPSendS(Sname3,S(TTPSigKey,(Released,S2TTP3,R3)));
            {92}event TTPSendR(idTTPtoR_1,(Try,k3_1,hr3));
            {93}out(TTPsecchannelToR, (Try,k3_1,hr3));
            {94}out(Sname3, S(TTPSigKey,(Released,S2TTP3,R3)))
        else
            {95}if (ttpauth3 = NoAuth) then
            {96}event TTPSendS2(Sname3,S(TTPSigKey,(Released,S2TTP3)));
            {97}event TTPSendR2(idTTPtoR_1,(Try,k3_1,hr3));
            {98}out(TTPsecchannelToR, (Try,k3_1,hr3));
            {99}out(Sname3, S(TTPSigKey,(Released,S2TTP3)))
    )
)

Translating the process into Horn clauses...
COMPUTATIONTIME translation to clauses: 0.005867s
NUMBERIMPLIES translation to clauses: 5984
-- Query not attacker(Message(PasswdTable(Rpwd[]),x_1,z)) in process 0.
Completing...
200 rules inserted. The rule base contains 189 rules. 60 rules in the queue.
400 rules inserted. The rule base contains 303 rules. 71 rules in the queue.
600 rules inserted. The rule base contains 407 rules. 61 rules in the queue.
800 rules inserted. The rule base contains 499 rules. 72 rules in the queue.
1000 rules inserted. The rule base contains 553 rules. 91 rules in the queue.
1200 rules inserted. The rule base contains 595 rules. 73 rules in the queue.
1400 rules inserted. The rule base contains 712 rules. 72 rules in the queue.
1600 rules inserted. The rule base contains 835 rules. 51 rules in the queue.
COMPUTATIONTIME completion of rules: 0.322186s
NUMBERIMPLIES completion of rules: 89795
ok, secrecy assumption verified: fact unreachable attacker(TTPDecKey[])
ok, secrecy assumption verified: fact unreachable attacker(TTPSigKey[])
ok, secrecy assumption verified: fact unreachable attacker(dhsecretR[!1 = v])
ok, secrecy assumption verified: fact unreachable attacker(dhsecretTTP[dhpublicR_1 = v,receivername = v_1,!1 = v_2])
Starting query not attacker(Message(PasswdTable(Rpwd[]),x_1,z))
goal reachable: attacker(Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))
Abbreviations:
msgid_1 = msgid[ttpauth = NoAuth,sauth = NoAuth,recipient = PasswdTable(Rpwd[]),!1 = @sid]

Derivation:
Abbreviations:
msgid_1 = msgid[ttpauth = NoAuth,sauth = NoAuth,recipient = PasswdTable(Rpwd[]),!1 = @sid]
k_1 = k[ttpauth = NoAuth,sauth = NoAuth,recipient = PasswdTable(Rpwd[]),!1 = @sid]
dhsecretTTP_1 = dhsecretTTP[dhpublicR_1 = g,receivername = PasswdTable(Rpwd[]),!1 = @sid_1]
TTPsecchannelToR_1 = TTPsecchannelToR[dhpublicR_1 = g,receivername = PasswdTable(Rpwd[]),!1 = @sid_1]
TTPsecchannelFromR_1 = TTPsecchannelFromR[dhpublicR_1 = g,receivername = PasswdTable(Rpwd[]),!1 = @sid_1]

1. The message PasswdTable(Rpwd[]) may be sent to the attacker at output {6}.
attacker(PasswdTable(Rpwd[])).

2. Using the function NoAuth the attacker may obtain NoAuth.
attacker(NoAuth).

3. By 2, the attacker may know NoAuth.
By 2, the attacker may know NoAuth.
Using the function 2-tuple the attacker may obtain (NoAuth,NoAuth).
attacker((NoAuth,NoAuth)).

4. The message PasswdTable(Rpwd[]) that the attacker may have by 1 may be received at input {8}.
The message (NoAuth,NoAuth) that the attacker may have by 3 may be received at input {9}.
So the message (TTPname[],E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))),(NoAuth,NoAuth),cleartext[],NullQ,A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))) may be sent on channel PasswdTable(Rpwd[]) at output {20}.
mess(PasswdTable(Rpwd[]),(TTPname[],E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))),(NoAuth,NoAuth),cleartext[],NullQ,A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))))).

5. By 1, the attacker may have the channel PasswdTable(Rpwd[]).
By 4, the message (TTPname[],E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))),(NoAuth,NoAuth),cleartext[],NullQ,A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))) may be sent on this channel.
So the attacker may obtain the message (TTPname[],E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))),(NoAuth,NoAuth),cleartext[],NullQ,A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))) by listening on this channel.
attacker((TTPname[],E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))),(NoAuth,NoAuth),cleartext[],NullQ,A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))))).

6. By 5, the attacker may know (TTPname[],E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))),(NoAuth,NoAuth),cleartext[],NullQ,A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))).
Using the function 2-proj-6-tuple the attacker may obtain E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))).
attacker(E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))).

7. Using the function g the attacker may obtain g.
attacker(g).

8. Using the function KEXDHINIT the attacker may obtain KEXDHINIT.
attacker(KEXDHINIT).

9. By 8, the attacker may know KEXDHINIT.
By 7, the attacker may know g.
Using the function 2-tuple the attacker may obtain (KEXDHINIT,g).
attacker((KEXDHINIT,g)).

10. Using the function NullR the attacker may obtain NullR.
attacker(NullR).

11. Using the function NullQ the attacker may obtain NullQ.
attacker(NullQ).

12. The attacker initially knows cleartext[].
attacker(cleartext[]).

13. By 12, the attacker may know cleartext[].
By 11, the attacker may know NullQ.
By 10, the attacker may know NullR.
By 6, the attacker may know E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))).
Using the function 4-tuple the attacker may obtain (cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))).
attacker((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))).

14. By 13, the attacker may know (cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))).
Using the function H the attacker may obtain H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))).
attacker(H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))).

15. The attacker has some term RPwd3_1.
attacker(RPwd3_1).

16. Using the function Wants the attacker may obtain Wants.
attacker(Wants).

17. By 16, the attacker may know Wants.
By 15, the attacker may know RPwd3_1.
By 14, the attacker may know H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))).
Using the function 3-tuple the attacker may obtain (Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))).
attacker((Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))).

18. By 5, the attacker may know (TTPname[],E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))),(NoAuth,NoAuth),cleartext[],NullQ,A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))).
Using the function 6-proj-6-tuple the attacker may obtain A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).
attacker(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))).

19. By 18, the attacker may know A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).
By 17, the attacker may know (Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))).
Using the function 2-tuple the attacker may obtain (A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))).
attacker((A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).

20. Using the function keyMacRtoTTP the attacker may obtain keyMacRtoTTP.
attacker(keyMacRtoTTP).

21. The message PasswdTable(Rpwd[]) that the attacker may have by 1 may be received at input {65}.
The message (KEXDHINIT,g) that the attacker may have by 9 may be received at input {66}.
So the message (KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_1),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))))) may be sent on channel PasswdTable(Rpwd[]) at output {71}.
mess(PasswdTable(Rpwd[]),(KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_1),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1)))))).

22. By 1, the attacker may have the channel PasswdTable(Rpwd[]).
By 21, the message (KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_1),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))))) may be sent on this channel.
So the attacker may obtain the message (KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_1),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))))) by listening on this channel.
attacker((KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_1),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1)))))).

23. By 22, the attacker may know (KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_1),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))))).
Using the function 3-proj-4-tuple the attacker may obtain exp(g,dhsecretTTP_1).
attacker(exp(g,dhsecretTTP_1)).

24. The message Spk(TTPSigKey[]) may be sent to the attacker at output {4}.
attacker(Spk(TTPSigKey[])).

25. By 24, the attacker may know Spk(TTPSigKey[]).
By 7, the attacker may know g.
By 23, the attacker may know exp(g,dhsecretTTP_1).
By 23, the attacker may know exp(g,dhsecretTTP_1).
Using the function 4-tuple the attacker may obtain (Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1)).
attacker((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))).

26. By 25, the attacker may know (Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1)).
Using the function H the attacker may obtain H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))).
attacker(H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1)))).

27. By 23, the attacker may know exp(g,dhsecretTTP_1).
By 26, the attacker may know H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))).
By 20, the attacker may know keyMacRtoTTP.
Using the function 3-tuple the attacker may obtain (exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP).
attacker((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)).

28. By 27, the attacker may know (exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP).
Using the function H the attacker may obtain H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)).
attacker(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP))).

29. By 28, the attacker may know H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)).
By 19, the attacker may know (A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))).
Using the function mac the attacker may obtain mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).
attacker(mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))).

30. Using the function keyEncRtoTTP the attacker may obtain keyEncRtoTTP.
attacker(keyEncRtoTTP).

31. By 23, the attacker may know exp(g,dhsecretTTP_1).
By 26, the attacker may know H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))).
By 30, the attacker may know keyEncRtoTTP.
Using the function 3-tuple the attacker may obtain (exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP).
attacker((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)).

32. By 31, the attacker may know (exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP).
Using the function H the attacker may obtain H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)).
attacker(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP))).

33. By 32, the attacker may know H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)).
By 19, the attacker may know (A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))).
Using the function E the attacker may obtain E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).
attacker(E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))).

34. By 33, the attacker may know E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).
By 29, the attacker may know mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).
Using the function 2-tuple the attacker may obtain (E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))).
attacker((E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))))).

35. The message PasswdTable(Rpwd[]) that the attacker may have by 1 may be received at input {65}.
The message (KEXDHINIT,g) that the attacker may have by 9 may be received at input {66}.
The message (E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))) that the attacker may have by 34 may be received at input {83}.
So the message (A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))) may be sent on channel TTPsecchannelFromR_1 at output {86}.
mess(TTPsecchannelFromR_1,(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).

36. The message PasswdTable(Rpwd[]) that the attacker may have by 1 may be received at input {65}.
The message (KEXDHINIT,g) that the attacker may have by 9 may be received at input {66}.
The message (A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))) that may be sent on channel TTPsecchannelFromR_1 by 35 may be received at input {87}.
So the message (Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))) may be sent on channel TTPsecchannelToR_1 at output {98}.
mess(TTPsecchannelToR_1,(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))).

37. The message PasswdTable(Rpwd[]) that the attacker may have by 1 may be received at input {65}.
The message (KEXDHINIT,g) that the attacker may have by 9 may be received at input {66}.
The message (Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))) that may be sent on channel TTPsecchannelToR_1 by 36 may be received at input {80}.
So the message (E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR)),(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))),mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacTTPtoR)),(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))) may be sent on channel PasswdTable(Rpwd[]) at output {81}.
mess(PasswdTable(Rpwd[]),(E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR)),(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))),mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacTTPtoR)),(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))).

38. By 1, the attacker may have the channel PasswdTable(Rpwd[]).
By 37, the message (E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR)),(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))),mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacTTPtoR)),(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))) may be sent on this channel.
So the attacker may obtain the message (E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR)),(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))),mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacTTPtoR)),(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))) by listening on this channel.
attacker((E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR)),(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))),mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacTTPtoR)),(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))).

39. By 38, the attacker may know (E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR)),(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))),mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacTTPtoR)),(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).
Using the function 1-proj-2-tuple the attacker may obtain E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR)),(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))).
attacker(E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR)),(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).

40. Using the function keyEncTTPtoR the attacker may obtain keyEncTTPtoR.
attacker(keyEncTTPtoR).

41. By 23, the attacker may know exp(g,dhsecretTTP_1).
By 26, the attacker may know H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))).
By 40, the attacker may know keyEncTTPtoR.
Using the function 3-tuple the attacker may obtain (exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR).
attacker((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR)).

42. By 41, the attacker may know (exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR).
Using the function H the attacker may obtain H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR)).
attacker(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR))).

43. By 42, the attacker may know H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR)).
By 39, the attacker may know E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR)),(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))).
Using the function decE the attacker may obtain (Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))).
attacker((Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))).

44. By 43, the attacker may know (Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))).
Using the function 2-proj-3-tuple the attacker may obtain k_1.
attacker(k_1).

45. By 44, the attacker may know k_1.
By 6, the attacker may know E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))).
Using the function decE the attacker may obtain Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)).
attacker(Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))).

46. By 45, attacker(Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))).
The goal is reached, represented in the following fact:
attacker(Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, ~M) with ~M = pk(TTPDecKey) at {2}

out(c, ~M_1) with ~M_1 = Spk(TTPSigKey) at {4}

out(c, ~M_2) with ~M_2 = PasswdTable(Rpwd) at {6}

in(c, ~M_2) with ~M_2 = PasswdTable(Rpwd) at {8} in copy a

in(c, (NoAuth,NoAuth)) at {9} in copy a

new msgid: messageid creating msgid_1 at {10} in copy a

new k: key creating k_1 at {12} in copy a

new qtmp: tquery creating qtmp_1 at {13} in copy a

event Shas(Sname,k_1,cleartext,NullQ,NullR,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth))) at {19} in copy a

out(PasswdTable(Rpwd), (~M_3,~M_4,(NoAuth,NoAuth),~M_5,NullQ,~M_6)) with ~M_3 = TTPname, ~M_4 = E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth))), ~M_5 = cleartext, ~M_6 = A(pk(TTPDecKey),(Sname,(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd),H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth)))))))) at {20} in copy a

in(TTPname, ~M_2) with ~M_2 = PasswdTable(Rpwd) at {65} in copy a_1

in(TTPname, (KEXDHINIT,g)) at {66} in copy a_1

new dhsecretTTP: exponent creating dhsecretTTP_1 at {67} in copy a_1

out(PasswdTable(Rpwd), (KEXDHREPLY,~M_7,~M_8,~M_9)) with ~M_7 = Spk(TTPSigKey), ~M_8 = exp(g,dhsecretTTP_1), ~M_9 = nmrS(TTPSigKey,H((Spk(TTPSigKey),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1)))) at {71} in copy a_1

new TTPsecchannelToR: channel creating TTPsecchannelToR_1 at {77} in copy a_1

new TTPsecchannelFromR: channel creating TTPsecchannelFromR_1 at {78} in copy a_1

in(TTPname, (E(H((~M_8,H((~M_1,g,~M_8,~M_8)),keyEncRtoTTP)),(~M_6,(Wants,a_2,H((cleartext,NullQ,NullR,~M_4))))),mac(H((~M_8,H((~M_1,g,~M_8,~M_8)),keyMacRtoTTP)),(~M_6,(Wants,a_2,H((cleartext,NullQ,NullR,~M_4))))))) with E(H((~M_8,H((~M_1,g,~M_8,~M_8)),keyEncRtoTTP)),(~M_6,(Wants,a_2,H((cleartext,NullQ,NullR,~M_4))))) = E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)),(A(pk(TTPDecKey),(Sname,(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd),H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth)))))))),(Wants,a_2,H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth)))))))), mac(H((~M_8,H((~M_1,g,~M_8,~M_8)),keyMacRtoTTP)),(~M_6,(Wants,a_2,H((cleartext,NullQ,NullR,~M_4))))) = mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)),(A(pk(TTPDecKey),(Sname,(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd),H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth)))))))),(Wants,a_2,H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth)))))))) at {83} in copy a_1, a_3

out(TTPsecchannelFromR_1, (A(pk(TTPDecKey),(Sname,(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd),H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth)))))))),(Wants,a_2,H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth)))))))) at {86} in copy a_1, a_3 received at {87} in copy a_1

event TTPSendS2(Sname,S(TTPSigKey,(Released,A(pk(TTPDecKey),(Sname,(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd),H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth))))))))))) at {96} in copy a_1

event TTPSendR2(id_for_host_key_key(PasswdTable(Rpwd),H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR)),H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacTTPtoR))),(Try,k_1,H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth))))))) at {97} in copy a_1

out(TTPsecchannelToR_1, (Try,k_1,H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth))))))) at {98} in copy a_1 received at {80} in copy a_1, a_4

out(Sname, ~M_10) with ~M_10 = S(TTPSigKey,(Released,A(pk(TTPDecKey),(Sname,(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd),H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth)))))))))) at {99} in copy a_1

out(PasswdTable(Rpwd), (~M_11,~M_12)) with ~M_11 = E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncTTPtoR)),(Try,k_1,H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth))))))), ~M_12 = mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacTTPtoR)),(Try,k_1,H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth))))))) at {81} in copy a_1, a_4

The attacker has the message decE(2-proj-3-tuple(decE(H((~M_8,H((~M_1,g,~M_8,~M_8)),keyEncTTPtoR)),~M_11)),~M_4) = Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth)).
A trace has been found.
RESULT not attacker(Message(PasswdTable(Rpwd[]),x_1,z)) is false.
COMPUTATIONTIME solving_queries (include completion): 0.327947s
NUMBERIMPLIES solving_queries (include completion): 854

--------------------------------------------------------------
Verification summary:

Query not attacker(Message(PasswdTable(Rpwd[]),x_1,z)) is false.

--------------------------------------------------------------

