Process 0 (that is, the initial process):
{1}let TTPEncKey: pkey = pk(TTPDecKey) in
{2}out(c, TTPEncKey);
{3}let TTPVerKey: spkey = Spk(TTPSigKey) in
{4}out(c, TTPVerKey);
{5}let Rname: host = PasswdTable(Rpwd) in
{6}out(c, Rname);
(
    {7}!
    {8}in(c, recipient: host);
    {9}in(c, (sauth: authtag,ttpauth: authtag));
    {10}new msgid: messageid;
    {11}let m: bitstring = Message(recipient,msgid,(sauth,ttpauth)) in
    {12}new k: key;
    {13}new qtmp: tquery;
    {14}let q: tquery = getAuthQ(qtmp,sauth) in
    {15}let r: reply = getAuthR(Reply(recipient,qtmp),sauth) in
    {16}let em: bitstring = E(k,m) in
    {17}let hs: key = H((cleartext,q,r,em)) in
    {18}let S2TTP: bitstring = A(TTPEncKey,(Sname,(sauth,ttpauth),(Give,k,recipient,hs))) in
    {19}event Shas(Sname,k,cleartext,q,r,m);
    {20}out(recipient, (TTPname,em,(sauth,ttpauth),cleartext,q,S2TTP));
    {21}!
    {22}in(Sname, inmess4: tcertif);
    {23}if (ttpauth = Auth) then
    (
        {24}let (=Released,=S2TTP,=recipient) = checkS(TTPVerKey,inmess4) in
            {25}event SThinksRhas(m);
            {26}out(Judgename, (inmess4,Sname,k,cleartext,q,r,em))
        else
            {27}out(Sname, inmess4)
    )
    else
        {28}let (=Released,=S2TTP) = checkS(TTPVerKey,inmess4) in
            {29}event SThinksRhas(m)
        else
            {30}out(Sname, inmess4)
) | (
    {31}!
    {32}in(Judgename, (certif: tcertif,Sname5: host,k5: key,cleartext5: bitstring,q5: tquery,r5: reply,em5: bitstring));
    {33}let (=Released,S2TTP5: bitstring,Rname5: host) = checkS(TTPVerKey,certif) in
    {34}let m5: bitstring = decE(k5,em5) in
    {35}let hs5: key = H((cleartext5,q5,r5,em5)) in
    {36}if (S2TTP5 = A(TTPEncKey,(Sname5,(Auth,Auth),(Give,k5,Rname5,hs5)))) then
        {37}event JudgeSays(Received,Rname5,m5)
    else
        {38}if (S2TTP5 = A(TTPEncKey,(Sname5,(NoAuth,Auth),(Give,k5,Rname5,hs5)))) then
        {39}event JudgeSays(Received,Rname5,m5)
) | (
    {40}!
    {41}new shkey: key;
    {42}out(TTPname, Rname);
    {43}out(TTPname, A(TTPEncKey,(ChKey,shkey)));
    {44}let idTTPtoR: idttpr = id_for_key(shkey) in
    {45}new RsecchannelToTTP: channel;
    {46}new RsecchannelFromTTP: channel;
    (
        {47}!
        {48}in(RsecchannelToTTP, m_1: bitstring);
        {49}out(TTPname, E(shkey,m_1))
    ) | (
        {50}!
        {51}in(Rname, mR: bitstring);
        {52}out(RsecchannelFromTTP, decE(shkey,mR))
    ) | (
        {53}out(c, RsecchannelToTTP);
        {54}out(c, RsecchannelFromTTP);
        (
            {55}out(c, Rpwd)
        ) | (
            {56}in(c, m_2: bitstring);
            {57}event Rreceived(m_2)
        )
    )
) | (
    {58}!
    {59}in(TTPname, receivername: host);
    {60}in(TTPname, m1: bitstring);
    {61}let (=ChKey,shkey_1: key) = decA(TTPDecKey,m1) in
    {62}let idTTPtoR_1: idttpr = id_for_key(shkey_1) in
    {63}new TTPsecchannelToR: channel;
    {64}new TTPsecchannelFromR: channel;
    (
        {65}!
        {66}in(TTPsecchannelToR, m_3: bitstring);
        {67}out(receivername, E(shkey_1,m_3))
    ) | (
        {68}!
        {69}in(TTPname, mTTP: bitstring);
        {70}out(TTPsecchannelFromR, decE(shkey_1,mTTP))
    ) | (
        {71}in(TTPsecchannelFromR, (S2TTP3: bitstring,(=Wants,RPwd3: passwd,hr3: key)));
        {72}let (Sname3: host,(sauth3: authtag,ttpauth3: authtag),(=Give,k3: key,R3: host,=hr3)) = decA(TTPDecKey,S2TTP3) in
        {73}if (R3 = receivername) then
        {74}if ((ttpauth3,R3) = (Auth,PasswdTable(RPwd3))) then
            {75}event TTPSendS(Sname3,S(TTPSigKey,(Released,S2TTP3,R3)));
            {76}event TTPSendR(idTTPtoR_1,(Try,k3,hr3));
            {77}out(TTPsecchannelToR, (Try,k3,hr3));
            {78}out(Sname3, S(TTPSigKey,(Released,S2TTP3,R3)))
        else
            {79}if (ttpauth3 = NoAuth) then
            {80}event TTPSendS2(Sname3,S(TTPSigKey,(Released,S2TTP3)));
            {81}event TTPSendR2(idTTPtoR_1,(Try,k3,hr3));
            {82}out(TTPsecchannelToR, (Try,k3,hr3));
            {83}out(Sname3, S(TTPSigKey,(Released,S2TTP3)))
    )
)

Translating the process into Horn clauses...
COMPUTATIONTIME translation to clauses: 0.004392s
NUMBERIMPLIES translation to clauses: 6194
-- Query putbegin event:Shas,TTPSendS; not event(Rreceived(Message(x,y,(z,Auth)))) in process 0.
Completing...
200 rules inserted. The rule base contains 178 rules. 20 rules in the queue.
400 rules inserted. The rule base contains 209 rules. 20 rules in the queue.
COMPUTATIONTIME completion of rules: 0.049910s
NUMBERIMPLIES completion of rules: 10320
ok, secrecy assumption verified: fact unreachable attacker(TTPDecKey[])
ok, secrecy assumption verified: fact unreachable attacker(TTPSigKey[])
Starting query not event(Rreceived(Message(x,y,(z,Auth))))
goal reachable: begin(TTPSendS(Sname[],S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1))))) && begin(Shas(Sname[],k_1,cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))) && attacker(RPwd3_1) -> end(Rreceived(Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))
Abbreviations:
msgid_1 = msgid[ttpauth = Auth,sauth = Auth,recipient = PasswdTable(RPwd3_1),!1 = @sid]
k_1 = k[ttpauth = Auth,sauth = Auth,recipient = PasswdTable(RPwd3_1),!1 = @sid]
qtmp_1 = qtmp[ttpauth = Auth,sauth = Auth,recipient = PasswdTable(RPwd3_1),!1 = @sid]

Derivation:
Abbreviations:
msgid_1 = msgid[ttpauth = Auth,sauth = Auth,recipient = PasswdTable(RPwd3_1),!1 = @sid]
k_1 = k[ttpauth = Auth,sauth = Auth,recipient = PasswdTable(RPwd3_1),!1 = @sid]
qtmp_1 = qtmp[ttpauth = Auth,sauth = Auth,recipient = PasswdTable(RPwd3_1),!1 = @sid]
shkey_2 = shkey[!1 = @sid_1]
TTPsecchannelFromR_1 = TTPsecchannelFromR[m1 = A(pk(TTPDecKey[]),(ChKey,shkey_2)),receivername = PasswdTable(RPwd3_1),!1 = @sid_2]
RsecchannelToTTP_1 = RsecchannelToTTP[!1 = @sid_1]

1. We assume as hypothesis that
attacker(RPwd3_1).

2. By 1, the attacker may know RPwd3_1.
Using the function PasswdTable the attacker may obtain PasswdTable(RPwd3_1).
attacker(PasswdTable(RPwd3_1)).

3. Using the function Auth the attacker may obtain Auth.
attacker(Auth).

4. By 3, the attacker may know Auth.
By 3, the attacker may know Auth.
Using the function 2-tuple the attacker may obtain (Auth,Auth).
attacker((Auth,Auth)).

5. The message PasswdTable(RPwd3_1) that the attacker may have by 2 may be received at input {8}.
The message (Auth,Auth) that the attacker may have by 4 may be received at input {9}.
The event Shas(Sname[],k_1,cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))) may be executed at {19}.
So the message (TTPname[],E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))),(Auth,Auth),cleartext[],qtmp_1,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))) may be sent on channel PasswdTable(RPwd3_1) at output {20}.
mess(PasswdTable(RPwd3_1),(TTPname[],E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))),(Auth,Auth),cleartext[],qtmp_1,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))))).

6. By 2, the attacker may have the channel PasswdTable(RPwd3_1).
By 5, the message (TTPname[],E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))),(Auth,Auth),cleartext[],qtmp_1,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))) may be sent on this channel.
So the attacker may obtain the message (TTPname[],E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))),(Auth,Auth),cleartext[],qtmp_1,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))) by listening on this channel.
attacker((TTPname[],E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))),(Auth,Auth),cleartext[],qtmp_1,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))))).

7. By 6, the attacker may know (TTPname[],E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))),(Auth,Auth),cleartext[],qtmp_1,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))).
Using the function 2-proj-6-tuple the attacker may obtain E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))).
attacker(E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))).

8. The attacker initially knows Sname[].
attacker(Sname[]).

9. The message A(pk(TTPDecKey[]),(ChKey,shkey_2)) may be sent to the attacker at output {43}.
attacker(A(pk(TTPDecKey[]),(ChKey,shkey_2))).

10. By 6, the attacker may know (TTPname[],E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))),(Auth,Auth),cleartext[],qtmp_1,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))).
Using the function 5-proj-6-tuple the attacker may obtain qtmp_1.
attacker(qtmp_1).

11. By 2, the attacker may know PasswdTable(RPwd3_1).
By 10, the attacker may know qtmp_1.
Using the function Reply the attacker may obtain Reply(PasswdTable(RPwd3_1),qtmp_1).
attacker(Reply(PasswdTable(RPwd3_1),qtmp_1)).

12. The attacker initially knows cleartext[].
attacker(cleartext[]).

13. By 12, the attacker may know cleartext[].
By 10, the attacker may know qtmp_1.
By 11, the attacker may know Reply(PasswdTable(RPwd3_1),qtmp_1).
By 7, the attacker may know E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))).
Using the function 4-tuple the attacker may obtain (cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))).
attacker((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))).

14. By 13, the attacker may know (cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))).
Using the function H the attacker may obtain H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))).
attacker(H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))).

15. Using the function Wants the attacker may obtain Wants.
attacker(Wants).

16. By 15, the attacker may know Wants.
By 1, the attacker may know RPwd3_1.
By 14, the attacker may know H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))).
Using the function 3-tuple the attacker may obtain (Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))).
attacker((Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))).

17. By 6, the attacker may know (TTPname[],E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))),(Auth,Auth),cleartext[],qtmp_1,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))).
Using the function 6-proj-6-tuple the attacker may obtain A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))).
attacker(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))).

18. By 17, the attacker may know A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))).
By 16, the attacker may know (Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))).
Using the function 2-tuple the attacker may obtain (A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))).
attacker((A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))).

19. The message RsecchannelToTTP_1 may be sent to the attacker at output {53}.
attacker(RsecchannelToTTP_1).

20. By 19, the attacker may have the channel RsecchannelToTTP_1.
By 18, the attacker may have the message (A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))).
So the attacker may send this message on this channel.
mess(RsecchannelToTTP_1,(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))).

21. The message (A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))) that may be sent on channel RsecchannelToTTP_1 by 20 may be received at input {48}.
So the message E(shkey_2,(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))) may be sent to the attacker at output {49}.
attacker(E(shkey_2,(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))).

22. The message PasswdTable(RPwd3_1) that the attacker may have by 2 may be received at input {59}.
The message A(pk(TTPDecKey[]),(ChKey,shkey_2)) that the attacker may have by 9 may be received at input {60}.
The message E(shkey_2,(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))) that the attacker may have by 21 may be received at input {69}.
So the message (A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))) may be sent on channel TTPsecchannelFromR_1 at output {70}.
mess(TTPsecchannelFromR_1,(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))).

23. The message PasswdTable(RPwd3_1) that the attacker may have by 2 may be received at input {59}.
The message A(pk(TTPDecKey[]),(ChKey,shkey_2)) that the attacker may have by 9 may be received at input {60}.
The message (A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))) that may be sent on channel TTPsecchannelFromR_1 by 22 may be received at input {71}.
The event TTPSendS(Sname[],S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1)))) may be executed at {75}.
So the message S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1))) may be sent on channel Sname[] at output {78}.
mess(Sname[],S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1)))).

24. By 8, the attacker may have the channel Sname[].
By 23, the message S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1))) may be sent on this channel.
So the attacker may obtain the message S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1))) by listening on this channel.
attacker(S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1)))).

25. The message PasswdTable(RPwd3_1) that the attacker may have by 2 may be received at input {8}.
The message (Auth,Auth) that the attacker may have by 4 may be received at input {9}.
The event Shas(Sname[],k_1,cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))) may be executed at {19}.
The message S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1))) that the attacker may have by 24 may be received at input {22}.
So the message (S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1))),Sname[],k_1,cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))) may be sent to the attacker at output {26}.
attacker((S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1))),Sname[],k_1,cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))).

26. By 25, the attacker may know (S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1))),Sname[],k_1,cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))).
Using the function 3-proj-7-tuple the attacker may obtain k_1.
attacker(k_1).

27. By 26, the attacker may know k_1.
By 7, the attacker may know E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))).
Using the function decE the attacker may obtain Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)).
attacker(Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))).

28. The message Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)) that the attacker may have by 27 may be received at input {56}.
So event Rreceived(Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))) may be executed at {57}.
end(Rreceived(Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))).

29. By 28, end(Rreceived(Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))).
The goal is reached, represented in the following fact:
end(Rreceived(Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))).


Could not find a trace corresponding to this derivation.
RESULT not event(Rreceived(Message(x,y,(z,Auth)))) cannot be proved.
COMPUTATIONTIME solving_queries (include completion): 0.053957s
NUMBERIMPLIES solving_queries (include completion): 1771

--------------------------------------------------------------
Verification summary:

Query not event(Rreceived(Message(x,y,(z,Auth)))) cannot be proved.

--------------------------------------------------------------

