Process 0 (that is, the initial process):
{1}let TTPEncKey: pkey = pk(TTPDecKey) in
{2}out(c, TTPEncKey);
{3}let TTPVerKey: spkey = Spk(TTPSigKey) in
{4}out(c, TTPVerKey);
{5}let Rname: host = PasswdTable(Rpwd) in
{6}out(c, Rname);
(
    {7}!
    {8}in(c, recipient: host);
    {9}in(c, (sauth: authtag,ttpauth: authtag));
    {10}new msgid: messageid;
    {11}let m: bitstring = Message(recipient,msgid,(sauth,ttpauth)) in
    {12}new k: key;
    {13}new qtmp: tquery;
    {14}let q: tquery = getAuthQ(qtmp,sauth) in
    {15}let r: reply = getAuthR(Reply(recipient,qtmp),sauth) in
    {16}let em: bitstring = E(k,m) in
    {17}let hs: key = H((cleartext,q,r,em)) in
    {18}let S2TTP: bitstring = A(TTPEncKey,(Sname,(sauth,ttpauth),(Give,k,recipient,hs))) in
    {19}event Shas(Sname,k,cleartext,q,r,m);
    {20}out(recipient, (TTPname,em,(sauth,ttpauth),cleartext,q,S2TTP));
    {21}!
    {22}in(Sname, inmess4: tcertif);
    {23}if (ttpauth = Auth) then
    (
        {24}let (=Released,=S2TTP,=recipient) = checkS(TTPVerKey,inmess4) in
            {25}event SThinksRhas(m)
        else
            {26}out(Sname, inmess4)
    )
    else
        {27}let (=Released,=S2TTP) = checkS(TTPVerKey,inmess4) in
            {28}event SThinksRhas(m)
        else
            {29}out(Sname, inmess4)
) | (
    {30}!
    0
) | (
    {31}!
    {32}new shkey: key;
    {33}out(TTPname, Rname);
    {34}out(TTPname, A(TTPEncKey,(ChKey,shkey)));
    {35}let idTTPtoR: idttpr = id_for_key(shkey) in
    {36}new RsecchannelToTTP: channel;
    {37}new RsecchannelFromTTP: channel;
    (
        {38}!
        {39}in(RsecchannelToTTP, m_1: bitstring);
        {40}out(TTPname, E(shkey,m_1))
    ) | (
        {41}!
        {42}in(Rname, mR: bitstring);
        {43}out(RsecchannelFromTTP, decE(shkey,mR))
    ) | (
        {44}in(Rname, (=TTPname,em2: bitstring,(sauth_1: authtag,ttpauth_1: authtag),cleartext2: bitstring,q2: tquery,S2TTP2: bitstring));
        {45}let r2: reply = getAuthR(Reply(Rname,q2),sauth_1) in
        {46}let hr: key = H((cleartext2,q2,r2,em2)) in
        {47}event Rhas(idTTPtoR,em2,hr);
        {48}out(RsecchannelToTTP, (S2TTP2,(Wants,getAuthP(Rpwd,ttpauth_1),hr)));
        {49}!
        {50}in(RsecchannelFromTTP, (=Try,k3: key,=hr));
        {51}let m3: bitstring = decE(k3,em2) in
        {52}event Rreceived(m3)
    )
) | (
    {53}!
    {54}in(TTPname, receivername: host);
    {55}in(TTPname, m1: bitstring);
    {56}let (=ChKey,shkey_1: key) = decA(TTPDecKey,m1) in
    {57}let idTTPtoR_1: idttpr = id_for_key(shkey_1) in
    {58}new TTPsecchannelToR: channel;
    {59}new TTPsecchannelFromR: channel;
    (
        {60}!
        {61}in(TTPsecchannelToR, m_2: bitstring);
        {62}out(receivername, E(shkey_1,m_2))
    ) | (
        {63}!
        {64}in(TTPname, mTTP: bitstring);
        {65}out(TTPsecchannelFromR, decE(shkey_1,mTTP))
    ) | (
        {66}in(TTPsecchannelFromR, (S2TTP3: bitstring,(=Wants,RPwd3: passwd,hr3: key)));
        {67}let (Sname3: host,(sauth3: authtag,ttpauth3: authtag),(=Give,k3_1: key,R3: host,=hr3)) = decA(TTPDecKey,S2TTP3) in
        {68}if (R3 = receivername) then
        {69}if ((ttpauth3,R3) = (Auth,PasswdTable(RPwd3))) then
            {70}event TTPSendS(Sname3,S(TTPSigKey,(Released,S2TTP3,R3)));
            {71}event TTPSendR(idTTPtoR_1,(Try,k3_1,hr3));
            {72}out(TTPsecchannelToR, (Try,k3_1,hr3));
            {73}out(Sname3, S(TTPSigKey,(Released,S2TTP3,R3)))
        else
            {74}if (ttpauth3 = NoAuth) then
            {75}event TTPSendS2(Sname3,S(TTPSigKey,(Released,S2TTP3)));
            {76}event TTPSendR2(idTTPtoR_1,(Try,k3_1,hr3));
            {77}out(TTPsecchannelToR, (Try,k3_1,hr3));
            {78}out(Sname3, S(TTPSigKey,(Released,S2TTP3)))
    )
)

Translating the process into Horn clauses...
COMPUTATIONTIME translation to clauses: 0.003637s
NUMBERIMPLIES translation to clauses: 5010
-- Query not attacker(Message(PasswdTable(Rpwd[]),x,z)) in process 0.
Completing...
200 rules inserted. The rule base contains 177 rules. 48 rules in the queue.
400 rules inserted. The rule base contains 251 rules. 33 rules in the queue.
COMPUTATIONTIME completion of rules: 0.044133s
NUMBERIMPLIES completion of rules: 14911
ok, secrecy assumption verified: fact unreachable attacker(TTPDecKey[])
ok, secrecy assumption verified: fact unreachable attacker(TTPSigKey[])
Starting query not attacker(Message(PasswdTable(Rpwd[]),x,z))
goal reachable: attacker(Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))
Abbreviations:
msgid_1 = msgid[ttpauth = NoAuth,sauth = NoAuth,recipient = PasswdTable(Rpwd[]),!1 = @sid]

Derivation:
Abbreviations:
msgid_1 = msgid[ttpauth = NoAuth,sauth = NoAuth,recipient = PasswdTable(Rpwd[]),!1 = @sid]
k_1 = k[ttpauth = NoAuth,sauth = NoAuth,recipient = PasswdTable(Rpwd[]),!1 = @sid]
TTPsecchannelToR_1 = TTPsecchannelToR[m1 = A(pk(TTPDecKey[]),(ChKey,y)),receivername = PasswdTable(Rpwd[]),!1 = @sid_1]
TTPsecchannelFromR_1 = TTPsecchannelFromR[m1 = A(pk(TTPDecKey[]),(ChKey,y)),receivername = PasswdTable(Rpwd[]),!1 = @sid_1]

1. The message PasswdTable(Rpwd[]) may be sent to the attacker at output {6}.
attacker(PasswdTable(Rpwd[])).

2. Using the function NoAuth the attacker may obtain NoAuth.
attacker(NoAuth).

3. By 2, the attacker may know NoAuth.
By 2, the attacker may know NoAuth.
Using the function 2-tuple the attacker may obtain (NoAuth,NoAuth).
attacker((NoAuth,NoAuth)).

4. The message PasswdTable(Rpwd[]) that the attacker may have by 1 may be received at input {8}.
The message (NoAuth,NoAuth) that the attacker may have by 3 may be received at input {9}.
So the message (TTPname[],E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))),(NoAuth,NoAuth),cleartext[],NullQ,A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))) may be sent on channel PasswdTable(Rpwd[]) at output {20}.
mess(PasswdTable(Rpwd[]),(TTPname[],E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))),(NoAuth,NoAuth),cleartext[],NullQ,A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))))).

5. By 1, the attacker may have the channel PasswdTable(Rpwd[]).
By 4, the message (TTPname[],E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))),(NoAuth,NoAuth),cleartext[],NullQ,A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))) may be sent on this channel.
So the attacker may obtain the message (TTPname[],E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))),(NoAuth,NoAuth),cleartext[],NullQ,A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))) by listening on this channel.
attacker((TTPname[],E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))),(NoAuth,NoAuth),cleartext[],NullQ,A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))))).

6. By 5, the attacker may know (TTPname[],E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))),(NoAuth,NoAuth),cleartext[],NullQ,A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))).
Using the function 2-proj-6-tuple the attacker may obtain E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))).
attacker(E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))).

7. The attacker has some term y.
attacker(y).

8. Using the function ChKey the attacker may obtain ChKey.
attacker(ChKey).

9. By 8, the attacker may know ChKey.
By 7, the attacker may know y.
Using the function 2-tuple the attacker may obtain (ChKey,y).
attacker((ChKey,y)).

10. The message pk(TTPDecKey[]) may be sent to the attacker at output {2}.
attacker(pk(TTPDecKey[])).

11. By 10, the attacker may know pk(TTPDecKey[]).
By 9, the attacker may know (ChKey,y).
Using the function A the attacker may obtain A(pk(TTPDecKey[]),(ChKey,y)).
attacker(A(pk(TTPDecKey[]),(ChKey,y))).

12. Using the function NullR the attacker may obtain NullR.
attacker(NullR).

13. Using the function NullQ the attacker may obtain NullQ.
attacker(NullQ).

14. The attacker initially knows cleartext[].
attacker(cleartext[]).

15. By 14, the attacker may know cleartext[].
By 13, the attacker may know NullQ.
By 12, the attacker may know NullR.
By 6, the attacker may know E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))).
Using the function 4-tuple the attacker may obtain (cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))).
attacker((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))).

16. By 15, the attacker may know (cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))).
Using the function H the attacker may obtain H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))).
attacker(H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))).

17. The attacker has some term RPwd3_1.
attacker(RPwd3_1).

18. Using the function Wants the attacker may obtain Wants.
attacker(Wants).

19. By 18, the attacker may know Wants.
By 17, the attacker may know RPwd3_1.
By 16, the attacker may know H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))).
Using the function 3-tuple the attacker may obtain (Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))).
attacker((Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))).

20. By 5, the attacker may know (TTPname[],E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))),(NoAuth,NoAuth),cleartext[],NullQ,A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))).
Using the function 6-proj-6-tuple the attacker may obtain A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).
attacker(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))).

21. By 20, the attacker may know A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).
By 19, the attacker may know (Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))).
Using the function 2-tuple the attacker may obtain (A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))).
attacker((A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).

22. By 7, the attacker may know y.
By 21, the attacker may know (A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))).
Using the function E the attacker may obtain E(y,(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).
attacker(E(y,(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))))).

23. The message PasswdTable(Rpwd[]) that the attacker may have by 1 may be received at input {54}.
The message A(pk(TTPDecKey[]),(ChKey,y)) that the attacker may have by 11 may be received at input {55}.
The message E(y,(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))) that the attacker may have by 22 may be received at input {64}.
So the message (A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))) may be sent on channel TTPsecchannelFromR_1 at output {65}.
mess(TTPsecchannelFromR_1,(A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).

24. The message PasswdTable(Rpwd[]) that the attacker may have by 1 may be received at input {54}.
The message A(pk(TTPDecKey[]),(ChKey,y)) that the attacker may have by 11 may be received at input {55}.
The message (A(pk(TTPDecKey[]),(Sname[],(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd[]),H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))),(Wants,RPwd3_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))) that may be sent on channel TTPsecchannelFromR_1 by 23 may be received at input {66}.
So the message (Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))) may be sent on channel TTPsecchannelToR_1 at output {77}.
mess(TTPsecchannelToR_1,(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))).

25. The message PasswdTable(Rpwd[]) that the attacker may have by 1 may be received at input {54}.
The message A(pk(TTPDecKey[]),(ChKey,y)) that the attacker may have by 11 may be received at input {55}.
The message (Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))) that may be sent on channel TTPsecchannelToR_1 by 24 may be received at input {61}.
So the message E(y,(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))) may be sent on channel PasswdTable(Rpwd[]) at output {62}.
mess(PasswdTable(Rpwd[]),E(y,(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).

26. By 1, the attacker may have the channel PasswdTable(Rpwd[]).
By 25, the message E(y,(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))) may be sent on this channel.
So the attacker may obtain the message E(y,(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))) by listening on this channel.
attacker(E(y,(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))))).

27. By 7, the attacker may know y.
By 26, the attacker may know E(y,(Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))).
Using the function decE the attacker may obtain (Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))).
attacker((Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))))))).

28. By 27, the attacker may know (Try,k_1,H((cleartext[],NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)))))).
Using the function 2-proj-3-tuple the attacker may obtain k_1.
attacker(k_1).

29. By 28, the attacker may know k_1.
By 6, the attacker may know E(k_1,Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))).
Using the function decE the attacker may obtain Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth)).
attacker(Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))).

30. By 29, attacker(Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))).
The goal is reached, represented in the following fact:
attacker(Message(PasswdTable(Rpwd[]),msgid_1,(NoAuth,NoAuth))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, ~M) with ~M = pk(TTPDecKey) at {2}

out(c, ~M_1) with ~M_1 = Spk(TTPSigKey) at {4}

out(c, ~M_2) with ~M_2 = PasswdTable(Rpwd) at {6}

in(c, ~M_2) with ~M_2 = PasswdTable(Rpwd) at {8} in copy a

in(c, (NoAuth,NoAuth)) at {9} in copy a

new msgid: messageid creating msgid_1 at {10} in copy a

new k: key creating k_1 at {12} in copy a

new qtmp: tquery creating qtmp_1 at {13} in copy a

event Shas(Sname,k_1,cleartext,NullQ,NullR,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth))) at {19} in copy a

out(PasswdTable(Rpwd), (~M_3,~M_4,(NoAuth,NoAuth),~M_5,NullQ,~M_6)) with ~M_3 = TTPname, ~M_4 = E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth))), ~M_5 = cleartext, ~M_6 = A(pk(TTPDecKey),(Sname,(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd),H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth)))))))) at {20} in copy a

in(TTPname, ~M_2) with ~M_2 = PasswdTable(Rpwd) at {54} in copy a_1

in(TTPname, A(~M,(ChKey,a_2))) with A(~M,(ChKey,a_2)) = A(pk(TTPDecKey),(ChKey,a_2)) at {55} in copy a_1

new TTPsecchannelToR: channel creating TTPsecchannelToR_1 at {58} in copy a_1

new TTPsecchannelFromR: channel creating TTPsecchannelFromR_1 at {59} in copy a_1

in(TTPname, E(a_2,(~M_6,(Wants,a_3,H((cleartext,NullQ,NullR,~M_4)))))) with E(a_2,(~M_6,(Wants,a_3,H((cleartext,NullQ,NullR,~M_4))))) = E(a_2,(A(pk(TTPDecKey),(Sname,(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd),H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth)))))))),(Wants,a_3,H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth)))))))) at {64} in copy a_1, a_4

out(TTPsecchannelFromR_1, (A(pk(TTPDecKey),(Sname,(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd),H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth)))))))),(Wants,a_3,H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth)))))))) at {65} in copy a_1, a_4 received at {66} in copy a_1

event TTPSendS2(Sname,S(TTPSigKey,(Released,A(pk(TTPDecKey),(Sname,(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd),H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth))))))))))) at {75} in copy a_1

event TTPSendR2(id_for_key(a_2),(Try,k_1,H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth))))))) at {76} in copy a_1

out(TTPsecchannelToR_1, (Try,k_1,H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth))))))) at {77} in copy a_1 received at {61} in copy a_1, a_5

out(Sname, ~M_7) with ~M_7 = S(TTPSigKey,(Released,A(pk(TTPDecKey),(Sname,(NoAuth,NoAuth),(Give,k_1,PasswdTable(Rpwd),H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth)))))))))) at {78} in copy a_1

out(PasswdTable(Rpwd), ~M_8) with ~M_8 = E(a_2,(Try,k_1,H((cleartext,NullQ,NullR,E(k_1,Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth))))))) at {62} in copy a_1, a_5

The attacker has the message decE(2-proj-3-tuple(decE(a_2,~M_8)),~M_4) = Message(PasswdTable(Rpwd),msgid_1,(NoAuth,NoAuth)).
A trace has been found.
RESULT not attacker(Message(PasswdTable(Rpwd[]),x,z)) is false.
COMPUTATIONTIME solving_queries (include completion): 0.046716s
NUMBERIMPLIES solving_queries (include completion): 785

--------------------------------------------------------------
Verification summary:

Query not attacker(Message(PasswdTable(Rpwd[]),x,z)) is false.

--------------------------------------------------------------

