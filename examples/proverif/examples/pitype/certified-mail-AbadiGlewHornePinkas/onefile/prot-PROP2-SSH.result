Linear part:
exp(exp(g,x),y) = exp(exp(g,y),x)
Completing equations...
Completed equations:
exp(exp(g,x),y) = exp(exp(g,y),x)
Convergent part:
Completing equations...
Completed equations:
Process 0 (that is, the initial process):
{1}let TTPEncKey: pkey = pk(TTPDecKey) in
{2}out(c, TTPEncKey);
{3}let TTPVerKey: spkey = Spk(TTPSigKey) in
{4}out(c, TTPVerKey);
{5}let Rname: host = PasswdTable(Rpwd) in
{6}out(c, Rname);
(
    {7}!
    0
) | (
    {8}!
    {9}in(Judgename, (certif: tcertif,Sname5: host,k5: key,cleartext5: bitstring,q5: tquery,r5: reply,em5: bitstring));
    {10}let (=Released,S2TTP5: bitstring,Rname5: host) = checkS(TTPVerKey,certif) in
    {11}let m5: bitstring = decE(k5,em5) in
    {12}let hs5: key = H((cleartext5,q5,r5,em5)) in
    {13}if (S2TTP5 = A(TTPEncKey,(Sname5,(Auth,Auth),(Give,k5,Rname5,hs5)))) then
        {14}event JudgeSays(Received,Rname5,m5)
    else
        {15}if (S2TTP5 = A(TTPEncKey,(Sname5,(NoAuth,Auth),(Give,k5,Rname5,hs5)))) then
        {16}event JudgeSays(Received,Rname5,m5)
) | (
    {17}!
    {18}new dhsecretR: exponent;
    {19}let dhpublicR: G = exp(g,dhsecretR) in
    {20}out(TTPname, Rname);
    {21}out(TTPname, (KEXDHINIT,dhpublicR));
    {22}in(Rname, (=KEXDHREPLY,=TTPVerKey,dhpublicTTP: G,sign: bitstring));
    {23}let K: G = exp(dhpublicTTP,dhsecretR) in
    {24}let h: key = H((TTPVerKey,dhpublicR,dhpublicTTP,K)) in
    {25}if (checknmrS(TTPVerKey,sign,h) = true) then
    {26}let enckeyRtoTTP: key = H((K,h,keyEncRtoTTP)) in
    {27}let enckeyTTPtoR: key = H((K,h,keyEncTTPtoR)) in
    {28}let mackeyRtoTTP: key = H((K,h,keyMacRtoTTP)) in
    {29}let mackeyTTPtoR: key = H((K,h,keyMacTTPtoR)) in
    {30}let idTTPtoR: idttpr = id_for_host_key_key(Rname,enckeyTTPtoR,mackeyTTPtoR) in
    {31}new RsecchannelToTTP: channel;
    {32}new RsecchannelFromTTP: channel;
    (
        {33}!
        {34}in(RsecchannelToTTP, m2payload: bitstring);
        {35}out(TTPname, (E(enckeyRtoTTP,m2payload),mac(mackeyRtoTTP,m2payload)))
    ) | (
        {36}!
        {37}in(Rname, (m4enc: bitstring,m4mac: bitstring));
        {38}let m4payload: bitstring = decE(enckeyTTPtoR,m4enc) in
        {39}if (m4mac = mac(mackeyTTPtoR,m4payload)) then
        {40}out(RsecchannelFromTTP, m4payload)
    ) | (
        {41}in(Rname, (=TTPname,em2: bitstring,(sauth: authtag,ttpauth: authtag),cleartext2: bitstring,q2: tquery,S2TTP2: bitstring));
        {42}let r2: reply = getAuthR(Reply(Rname,q2),sauth) in
        {43}let hr: key = H((cleartext2,q2,r2,em2)) in
        {44}event Rhas(idTTPtoR,em2,hr);
        {45}out(RsecchannelToTTP, (S2TTP2,(Wants,getAuthP(Rpwd,ttpauth),hr)));
        {46}!
        {47}in(RsecchannelFromTTP, (=Try,k3: key,=hr));
        {48}let m3: bitstring = decE(k3,em2) in
        {49}event Rreceived(m3)
    )
) | (
    {50}!
    {51}in(TTPname, receivername: host);
    {52}in(TTPname, (=KEXDHINIT,dhpublicR_1: G));
    {53}new dhsecretTTP: exponent;
    {54}let dhpublicTTP_1: G = exp(g,dhsecretTTP) in
    {55}let K_1: G = exp(dhpublicR_1,dhsecretTTP) in
    {56}let h_1: key = H((TTPVerKey,dhpublicR_1,dhpublicTTP_1,K_1)) in
    {57}out(receivername, (KEXDHREPLY,TTPVerKey,dhpublicTTP_1,nmrS(TTPSigKey,h_1)));
    {58}let enckeyRtoTTP_1: key = H((K_1,h_1,keyEncRtoTTP)) in
    {59}let enckeyTTPtoR_1: key = H((K_1,h_1,keyEncTTPtoR)) in
    {60}let mackeyRtoTTP_1: key = H((K_1,h_1,keyMacRtoTTP)) in
    {61}let mackeyTTPtoR_1: key = H((K_1,h_1,keyMacTTPtoR)) in
    {62}let idTTPtoR_1: idttpr = id_for_host_key_key(receivername,enckeyTTPtoR_1,mackeyTTPtoR_1) in
    {63}new TTPsecchannelToR: channel;
    {64}new TTPsecchannelFromR: channel;
    (
        {65}!
        {66}in(TTPsecchannelToR, m3payload: bitstring);
        {67}out(receivername, (E(enckeyTTPtoR_1,m3payload),mac(mackeyTTPtoR_1,m3payload)))
    ) | (
        {68}!
        {69}in(TTPname, (m2enc: bitstring,m2mac: bitstring));
        {70}let m2payload_1: bitstring = decE(enckeyRtoTTP_1,m2enc) in
        {71}if (m2mac = mac(mackeyRtoTTP_1,m2payload_1)) then
        {72}out(TTPsecchannelFromR, m2payload_1)
    ) | (
        {73}in(TTPsecchannelFromR, (S2TTP3: bitstring,(=Wants,RPwd3: passwd,hr3: key)));
        {74}let (Sname3: host,(sauth3: authtag,ttpauth3: authtag),(=Give,k3_1: key,R3: host,=hr3)) = decA(TTPDecKey,S2TTP3) in
        {75}if (R3 = receivername) then
        {76}if ((ttpauth3,R3) = (Auth,PasswdTable(RPwd3))) then
            {77}event TTPSendS(Sname3,S(TTPSigKey,(Released,S2TTP3,R3)));
            {78}event TTPSendR(idTTPtoR_1,(Try,k3_1,hr3));
            {79}out(TTPsecchannelToR, (Try,k3_1,hr3));
            {80}out(Sname3, S(TTPSigKey,(Released,S2TTP3,R3)))
        else
            {81}if (ttpauth3 = NoAuth) then
            {82}event TTPSendS2(Sname3,S(TTPSigKey,(Released,S2TTP3)));
            {83}event TTPSendR2(idTTPtoR_1,(Try,k3_1,hr3));
            {84}out(TTPsecchannelToR, (Try,k3_1,hr3));
            {85}out(Sname3, S(TTPSigKey,(Released,S2TTP3)))
    )
)

Translating the process into Horn clauses...
COMPUTATIONTIME translation to clauses: 0.003419s
NUMBERIMPLIES translation to clauses: 7296
-- Query putbegin event:Rhas,TTPSendR; not event(JudgeSays(Received,PasswdTable(Rpwd[]),x_1)) in process 0.
Completing...
200 rules inserted. The rule base contains 191 rules. 36 rules in the queue.
400 rules inserted. The rule base contains 292 rules. 38 rules in the queue.
600 rules inserted. The rule base contains 382 rules. 44 rules in the queue.
800 rules inserted. The rule base contains 480 rules. 97 rules in the queue.
1000 rules inserted. The rule base contains 648 rules. 144 rules in the queue.
1200 rules inserted. The rule base contains 827 rules. 129 rules in the queue.
1400 rules inserted. The rule base contains 987 rules. 108 rules in the queue.
1600 rules inserted. The rule base contains 1159 rules. 208 rules in the queue.
1800 rules inserted. The rule base contains 1338 rules. 279 rules in the queue.
2000 rules inserted. The rule base contains 1536 rules. 188 rules in the queue.
2200 rules inserted. The rule base contains 1728 rules. 221 rules in the queue.
2400 rules inserted. The rule base contains 1921 rules. 209 rules in the queue.
2600 rules inserted. The rule base contains 2109 rules. 149 rules in the queue.
2800 rules inserted. The rule base contains 2295 rules. 137 rules in the queue.
3000 rules inserted. The rule base contains 2481 rules. 169 rules in the queue.
3200 rules inserted. The rule base contains 2676 rules. 72 rules in the queue.
COMPUTATIONTIME completion of rules: 0.790182s
NUMBERIMPLIES completion of rules: 128104
ok, secrecy assumption verified: fact unreachable attacker(TTPDecKey[])
ok, secrecy assumption verified: fact unreachable attacker(TTPSigKey[])
ok, secrecy assumption verified: fact unreachable attacker(dhsecretR[!1 = v])
ok, secrecy assumption verified: fact unreachable attacker(dhsecretTTP[dhpublicR_1 = v,receivername = v_1,!1 = v_2])
Starting query not event(JudgeSays(Received,PasswdTable(Rpwd[]),x_1))
goal reachable: begin(TTPSendR(id_for_host_key_key(PasswdTable(Rpwd[]),H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyEncTTPtoR)),H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyMacTTPtoR))),(Try,y_1,H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))) && begin(Rhas(id_for_host_key_key(PasswdTable(Rpwd[]),H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyEncTTPtoR)),H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyMacTTPtoR))),E(y_1,x_1),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))) && attacker(cleartext5_1) && attacker(q5_1) && attacker(y_1) && attacker(x_1) -> end(JudgeSays(Received,PasswdTable(Rpwd[]),x_1))
Abbreviations:
dhsecretR_1 = dhsecretR[!1 = @sid]
dhsecretTTP_1 = dhsecretTTP[dhpublicR_1 = exp(g,dhsecretR_1),receivername = PasswdTable(Rpwd[]),!1 = @sid_1]

Derivation:
Abbreviations:
dhsecretR_1 = dhsecretR[!1 = @sid]
dhsecretTTP_1 = dhsecretTTP[dhpublicR_1 = exp(g,dhsecretR_1),receivername = PasswdTable(Rpwd[]),!1 = @sid_1]
TTPsecchannelFromR_1 = TTPsecchannelFromR[dhpublicR_1 = exp(g,dhsecretR_1),receivername = PasswdTable(Rpwd[]),!1 = @sid_1]
RsecchannelToTTP_1 = RsecchannelToTTP[sign = nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1)))),dhpublicTTP = exp(g,dhsecretTTP_1),!1 = @sid]

1. We assume as hypothesis that
attacker(x_1).

2. We assume as hypothesis that
attacker(y_1).

3. By 2, the attacker may know y_1.
By 1, the attacker may know x_1.
Using the function E the attacker may obtain E(y_1,x_1).
attacker(E(y_1,x_1)).

4. We assume as hypothesis that
attacker(q5_1).

5. The message PasswdTable(Rpwd[]) may be sent to the attacker at output {6}.
attacker(PasswdTable(Rpwd[])).

6. By 5, the attacker may know PasswdTable(Rpwd[]).
By 4, the attacker may know q5_1.
Using the function Reply the attacker may obtain Reply(PasswdTable(Rpwd[]),q5_1).
attacker(Reply(PasswdTable(Rpwd[]),q5_1)).

7. We assume as hypothesis that
attacker(cleartext5_1).

8. The attacker has some term Sname5_1.
attacker(Sname5_1).

9. The message (KEXDHINIT,exp(g,dhsecretR_1)) may be sent to the attacker at output {21}.
attacker((KEXDHINIT,exp(g,dhsecretR_1))).

10. By 9, the attacker may know (KEXDHINIT,exp(g,dhsecretR_1)).
Using the function 2-proj-2-tuple the attacker may obtain exp(g,dhsecretR_1).
attacker(exp(g,dhsecretR_1)).

11. Using the function KEXDHINIT the attacker may obtain KEXDHINIT.
attacker(KEXDHINIT).

12. By 11, the attacker may know KEXDHINIT.
By 10, the attacker may know exp(g,dhsecretR_1).
Using the function 2-tuple the attacker may obtain (KEXDHINIT,exp(g,dhsecretR_1)).
attacker((KEXDHINIT,exp(g,dhsecretR_1))).

13. The message PasswdTable(Rpwd[]) that the attacker may have by 5 may be received at input {51}.
The message (KEXDHINIT,exp(g,dhsecretR_1)) that the attacker may have by 12 may be received at input {52}.
So the message (KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_1),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))))) may be sent on channel PasswdTable(Rpwd[]) at output {57}.
mess(PasswdTable(Rpwd[]),(KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_1),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1)))))).

14. By 7, the attacker may know cleartext5_1.
By 4, the attacker may know q5_1.
By 6, the attacker may know Reply(PasswdTable(Rpwd[]),q5_1).
By 3, the attacker may know E(y_1,x_1).
Using the function 4-tuple the attacker may obtain (cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)).
attacker((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))).

15. By 14, the attacker may know (cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)).
Using the function H the attacker may obtain H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))).
attacker(H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))).

16. Using the function Give the attacker may obtain Give.
attacker(Give).

17. By 16, the attacker may know Give.
By 2, the attacker may know y_1.
By 5, the attacker may know PasswdTable(Rpwd[]).
By 15, the attacker may know H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))).
Using the function 4-tuple the attacker may obtain (Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))).
attacker((Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))).

18. Using the function Auth the attacker may obtain Auth.
attacker(Auth).

19. Using the function NoAuth the attacker may obtain NoAuth.
attacker(NoAuth).

20. By 19, the attacker may know NoAuth.
By 18, the attacker may know Auth.
Using the function 2-tuple the attacker may obtain (NoAuth,Auth).
attacker((NoAuth,Auth)).

21. By 8, the attacker may know Sname5_1.
By 20, the attacker may know (NoAuth,Auth).
By 17, the attacker may know (Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))).
Using the function 3-tuple the attacker may obtain (Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))).
attacker((Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))).

22. The message pk(TTPDecKey[]) may be sent to the attacker at output {2}.
attacker(pk(TTPDecKey[])).

23. By 22, the attacker may know pk(TTPDecKey[]).
By 21, the attacker may know (Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))).
Using the function A the attacker may obtain A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))).
attacker(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))))).

24. By 18, the attacker may know Auth.
By 18, the attacker may know Auth.
Using the function 2-tuple the attacker may obtain (Auth,Auth).
attacker((Auth,Auth)).

25. The attacker initially knows TTPname[].
attacker(TTPname[]).

26. By 25, the attacker may know TTPname[].
By 3, the attacker may know E(y_1,x_1).
By 24, the attacker may know (Auth,Auth).
By 7, the attacker may know cleartext5_1.
By 4, the attacker may know q5_1.
By 23, the attacker may know A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))).
Using the function 6-tuple the attacker may obtain (TTPname[],E(y_1,x_1),(Auth,Auth),cleartext5_1,q5_1,A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))))).
attacker((TTPname[],E(y_1,x_1),(Auth,Auth),cleartext5_1,q5_1,A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))))).

27. By 5, the attacker may have the channel PasswdTable(Rpwd[]).
By 26, the attacker may have the message (TTPname[],E(y_1,x_1),(Auth,Auth),cleartext5_1,q5_1,A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))))).
So the attacker may send this message on this channel.
mess(PasswdTable(Rpwd[]),(TTPname[],E(y_1,x_1),(Auth,Auth),cleartext5_1,q5_1,A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))))).

28. The message (KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_1),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))))) that may be sent on channel PasswdTable(Rpwd[]) by 13 may be received at input {22}.
The message (TTPname[],E(y_1,x_1),(Auth,Auth),cleartext5_1,q5_1,A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))))) that may be sent on channel PasswdTable(Rpwd[]) by 27 may be received at input {41}.
The event Rhas(id_for_host_key_key(PasswdTable(Rpwd[]),H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyEncTTPtoR)),H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyMacTTPtoR))),E(y_1,x_1),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))) may be executed at {44}.
So the message (A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))) may be sent on channel RsecchannelToTTP_1 at output {45}.
mess(RsecchannelToTTP_1,(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))).

29. The message (KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_1),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))))) that may be sent on channel PasswdTable(Rpwd[]) by 13 may be received at input {22}.
The message (A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))) that may be sent on channel RsecchannelToTTP_1 by 28 may be received at input {34}.
So the message (E(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),mac(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))))) may be sent to the attacker at output {35}.
attacker((E(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),mac(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))))).

30. By 29, the attacker may know (E(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),mac(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))))).
Using the function 2-proj-2-tuple the attacker may obtain mac(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))).
attacker(mac(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))))).

31. By 29, the attacker may know (E(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),mac(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))))).
Using the function 1-proj-2-tuple the attacker may obtain E(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))).
attacker(E(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))))).

32. By 31, the attacker may know E(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))).
By 30, the attacker may know mac(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))).
Using the function 2-tuple the attacker may obtain (E(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),mac(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))))).
attacker((E(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),mac(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))))).

33. The message PasswdTable(Rpwd[]) that the attacker may have by 5 may be received at input {51}.
The message (KEXDHINIT,exp(g,dhsecretR_1)) that the attacker may have by 12 may be received at input {52}.
The message (E(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),mac(H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))))) that the attacker may have by 32 may be received at input {69}.
So the message (A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))) may be sent on channel TTPsecchannelFromR_1 at output {72}.
mess(TTPsecchannelFromR_1,(A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))).

34. The message PasswdTable(Rpwd[]) that the attacker may have by 5 may be received at input {51}.
The message (KEXDHINIT,exp(g,dhsecretR_1)) that the attacker may have by 12 may be received at input {52}.
The message (A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),(Wants,Rpwd[],H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))) that may be sent on channel TTPsecchannelFromR_1 by 33 may be received at input {73}.
The event TTPSendR(id_for_host_key_key(PasswdTable(Rpwd[]),H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyEncTTPtoR)),H((exp(exp(g,dhsecretTTP_1),dhsecretR_1),H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_1),exp(exp(g,dhsecretTTP_1),dhsecretR_1))),keyMacTTPtoR))),(Try,y_1,H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))))) may be executed at {78}.
So the message S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),PasswdTable(Rpwd[]))) may be sent on channel Sname5_1 at output {80}.
mess(Sname5_1,S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),PasswdTable(Rpwd[])))).

35. By 8, the attacker may have the channel Sname5_1.
By 34, the message S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),PasswdTable(Rpwd[]))) may be sent on this channel.
So the attacker may obtain the message S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),PasswdTable(Rpwd[]))) by listening on this channel.
attacker(S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),PasswdTable(Rpwd[])))).

36. By 35, the attacker may know S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),PasswdTable(Rpwd[]))).
By 8, the attacker may know Sname5_1.
By 2, the attacker may know y_1.
By 7, the attacker may know cleartext5_1.
By 4, the attacker may know q5_1.
By 6, the attacker may know Reply(PasswdTable(Rpwd[]),q5_1).
By 3, the attacker may know E(y_1,x_1).
Using the function 7-tuple the attacker may obtain (S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),PasswdTable(Rpwd[]))),Sname5_1,y_1,cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)).
attacker((S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),PasswdTable(Rpwd[]))),Sname5_1,y_1,cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1))).

37. The message (S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname5_1,(NoAuth,Auth),(Give,y_1,PasswdTable(Rpwd[]),H((cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)))))),PasswdTable(Rpwd[]))),Sname5_1,y_1,cleartext5_1,q5_1,Reply(PasswdTable(Rpwd[]),q5_1),E(y_1,x_1)) that the attacker may have by 36 may be received at input {9}.
So event JudgeSays(Received,PasswdTable(Rpwd[]),x_1) may be executed at {16}.
end(JudgeSays(Received,PasswdTable(Rpwd[]),x_1)).

38. By 37, end(JudgeSays(Received,PasswdTable(Rpwd[]),x_1)).
The goal is reached, represented in the following fact:
end(JudgeSays(Received,PasswdTable(Rpwd[]),x_1)).


Could not find a trace corresponding to this derivation.
RESULT not event(JudgeSays(Received,PasswdTable(Rpwd[]),x_1)) cannot be proved.
COMPUTATIONTIME solving_queries (include completion): 0.798154s
NUMBERIMPLIES solving_queries (include completion): 1360

--------------------------------------------------------------
Verification summary:

Query not event(JudgeSays(Received,PasswdTable(Rpwd[]),x_1)) cannot be proved.

--------------------------------------------------------------

