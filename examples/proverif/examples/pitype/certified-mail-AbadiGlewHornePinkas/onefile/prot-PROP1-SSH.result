Linear part:
exp(exp(g,x),y) = exp(exp(g,y),x)
Completing equations...
Completed equations:
exp(exp(g,x),y) = exp(exp(g,y),x)
Convergent part:
Completing equations...
Completed equations:
Process 0 (that is, the initial process):
{1}let TTPEncKey: pkey = pk(TTPDecKey) in
{2}out(c, TTPEncKey);
{3}let TTPVerKey: spkey = Spk(TTPSigKey) in
{4}out(c, TTPVerKey);
{5}let Rname: host = PasswdTable(Rpwd) in
{6}out(c, Rname);
(
    {7}!
    {8}in(c, recipient: host);
    {9}in(c, (sauth: authtag,ttpauth: authtag));
    {10}new msgid: messageid;
    {11}let m: bitstring = Message(recipient,msgid,(sauth,ttpauth)) in
    {12}new k: key;
    {13}new qtmp: tquery;
    {14}let q: tquery = getAuthQ(qtmp,sauth) in
    {15}let r: reply = getAuthR(Reply(recipient,qtmp),sauth) in
    {16}let em: bitstring = E(k,m) in
    {17}let hs: key = H((cleartext,q,r,em)) in
    {18}let S2TTP: bitstring = A(TTPEncKey,(Sname,(sauth,ttpauth),(Give,k,recipient,hs))) in
    {19}event Shas(Sname,k,cleartext,q,r,m);
    {20}out(recipient, (TTPname,em,(sauth,ttpauth),cleartext,q,S2TTP));
    {21}!
    {22}in(Sname, inmess4: tcertif);
    {23}if (ttpauth = Auth) then
    (
        {24}let (=Released,=S2TTP,=recipient) = checkS(TTPVerKey,inmess4) in
            {25}event SThinksRhas(m);
            {26}out(Judgename, (inmess4,Sname,k,cleartext,q,r,em))
        else
            {27}out(Sname, inmess4)
    )
    else
        {28}let (=Released,=S2TTP) = checkS(TTPVerKey,inmess4) in
            {29}event SThinksRhas(m)
        else
            {30}out(Sname, inmess4)
) | (
    {31}!
    {32}in(Judgename, (certif: tcertif,Sname5: host,k5: key,cleartext5: bitstring,q5: tquery,r5: reply,em5: bitstring));
    {33}let (=Released,S2TTP5: bitstring,Rname5: host) = checkS(TTPVerKey,certif) in
    {34}let m5: bitstring = decE(k5,em5) in
    {35}let hs5: key = H((cleartext5,q5,r5,em5)) in
    {36}if (S2TTP5 = A(TTPEncKey,(Sname5,(Auth,Auth),(Give,k5,Rname5,hs5)))) then
        {37}event JudgeSays(Received,Rname5,m5)
    else
        {38}if (S2TTP5 = A(TTPEncKey,(Sname5,(NoAuth,Auth),(Give,k5,Rname5,hs5)))) then
        {39}event JudgeSays(Received,Rname5,m5)
) | (
    {40}!
    {41}new dhsecretR: exponent;
    {42}let dhpublicR: G = exp(g,dhsecretR) in
    {43}out(TTPname, Rname);
    {44}out(TTPname, (KEXDHINIT,dhpublicR));
    {45}in(Rname, (=KEXDHREPLY,=TTPVerKey,dhpublicTTP: G,sign: bitstring));
    {46}let K: G = exp(dhpublicTTP,dhsecretR) in
    {47}let h: key = H((TTPVerKey,dhpublicR,dhpublicTTP,K)) in
    {48}if (checknmrS(TTPVerKey,sign,h) = true) then
    {49}let enckeyRtoTTP: key = H((K,h,keyEncRtoTTP)) in
    {50}let enckeyTTPtoR: key = H((K,h,keyEncTTPtoR)) in
    {51}let mackeyRtoTTP: key = H((K,h,keyMacRtoTTP)) in
    {52}let mackeyTTPtoR: key = H((K,h,keyMacTTPtoR)) in
    {53}let idTTPtoR: idttpr = id_for_host_key_key(Rname,enckeyTTPtoR,mackeyTTPtoR) in
    {54}new RsecchannelToTTP: channel;
    {55}new RsecchannelFromTTP: channel;
    (
        {56}!
        {57}in(RsecchannelToTTP, m2payload: bitstring);
        {58}out(TTPname, (E(enckeyRtoTTP,m2payload),mac(mackeyRtoTTP,m2payload)))
    ) | (
        {59}!
        {60}in(Rname, (m4enc: bitstring,m4mac: bitstring));
        {61}let m4payload: bitstring = decE(enckeyTTPtoR,m4enc) in
        {62}if (m4mac = mac(mackeyTTPtoR,m4payload)) then
        {63}out(RsecchannelFromTTP, m4payload)
    ) | (
        {64}out(c, RsecchannelToTTP);
        {65}out(c, RsecchannelFromTTP);
        (
            {66}out(c, Rpwd)
        ) | (
            {67}in(c, m_1: bitstring);
            {68}event Rreceived(m_1)
        )
    )
) | (
    {69}!
    {70}in(TTPname, receivername: host);
    {71}in(TTPname, (=KEXDHINIT,dhpublicR_1: G));
    {72}new dhsecretTTP: exponent;
    {73}let dhpublicTTP_1: G = exp(g,dhsecretTTP) in
    {74}let K_1: G = exp(dhpublicR_1,dhsecretTTP) in
    {75}let h_1: key = H((TTPVerKey,dhpublicR_1,dhpublicTTP_1,K_1)) in
    {76}out(receivername, (KEXDHREPLY,TTPVerKey,dhpublicTTP_1,nmrS(TTPSigKey,h_1)));
    {77}let enckeyRtoTTP_1: key = H((K_1,h_1,keyEncRtoTTP)) in
    {78}let enckeyTTPtoR_1: key = H((K_1,h_1,keyEncTTPtoR)) in
    {79}let mackeyRtoTTP_1: key = H((K_1,h_1,keyMacRtoTTP)) in
    {80}let mackeyTTPtoR_1: key = H((K_1,h_1,keyMacTTPtoR)) in
    {81}let idTTPtoR_1: idttpr = id_for_host_key_key(receivername,enckeyTTPtoR_1,mackeyTTPtoR_1) in
    {82}new TTPsecchannelToR: channel;
    {83}new TTPsecchannelFromR: channel;
    (
        {84}!
        {85}in(TTPsecchannelToR, m3payload: bitstring);
        {86}out(receivername, (E(enckeyTTPtoR_1,m3payload),mac(mackeyTTPtoR_1,m3payload)))
    ) | (
        {87}!
        {88}in(TTPname, (m2enc: bitstring,m2mac: bitstring));
        {89}let m2payload_1: bitstring = decE(enckeyRtoTTP_1,m2enc) in
        {90}if (m2mac = mac(mackeyRtoTTP_1,m2payload_1)) then
        {91}out(TTPsecchannelFromR, m2payload_1)
    ) | (
        {92}in(TTPsecchannelFromR, (S2TTP3: bitstring,(=Wants,RPwd3: passwd,hr3: key)));
        {93}let (Sname3: host,(sauth3: authtag,ttpauth3: authtag),(=Give,k3: key,R3: host,=hr3)) = decA(TTPDecKey,S2TTP3) in
        {94}if (R3 = receivername) then
        {95}if ((ttpauth3,R3) = (Auth,PasswdTable(RPwd3))) then
            {96}event TTPSendS(Sname3,S(TTPSigKey,(Released,S2TTP3,R3)));
            {97}event TTPSendR(idTTPtoR_1,(Try,k3,hr3));
            {98}out(TTPsecchannelToR, (Try,k3,hr3));
            {99}out(Sname3, S(TTPSigKey,(Released,S2TTP3,R3)))
        else
            {100}if (ttpauth3 = NoAuth) then
            {101}event TTPSendS2(Sname3,S(TTPSigKey,(Released,S2TTP3)));
            {102}event TTPSendR2(idTTPtoR_1,(Try,k3,hr3));
            {103}out(TTPsecchannelToR, (Try,k3,hr3));
            {104}out(Sname3, S(TTPSigKey,(Released,S2TTP3)))
    )
)

Translating the process into Horn clauses...
COMPUTATIONTIME translation to clauses: 0.004499s
NUMBERIMPLIES translation to clauses: 7296
-- Query putbegin event:Shas,TTPSendS; not event(Rreceived(Message(x_1,y_1,(z,Auth)))) in process 0.
Completing...
200 rules inserted. The rule base contains 181 rules. 42 rules in the queue.
400 rules inserted. The rule base contains 257 rules. 57 rules in the queue.
600 rules inserted. The rule base contains 347 rules. 51 rules in the queue.
800 rules inserted. The rule base contains 383 rules. 65 rules in the queue.
1000 rules inserted. The rule base contains 441 rules. 57 rules in the queue.
1200 rules inserted. The rule base contains 497 rules. 105 rules in the queue.
1400 rules inserted. The rule base contains 552 rules. 121 rules in the queue.
1600 rules inserted. The rule base contains 578 rules. 89 rules in the queue.
1800 rules inserted. The rule base contains 590 rules. 37 rules in the queue.
COMPUTATIONTIME completion of rules: 0.696712s
NUMBERIMPLIES completion of rules: 160862
ok, secrecy assumption verified: fact unreachable attacker(TTPDecKey[])
ok, secrecy assumption verified: fact unreachable attacker(TTPSigKey[])
ok, secrecy assumption verified: fact unreachable attacker(dhsecretR[!1 = v])
ok, secrecy assumption verified: fact unreachable attacker(dhsecretTTP[dhpublicR_1 = v,receivername = v_1,!1 = v_2])
Starting query not event(Rreceived(Message(x_1,y_1,(z,Auth))))
goal reachable: begin(TTPSendS(Sname[],S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1))))) && begin(Shas(Sname[],k_1,cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))) && attacker(RPwd3_1) -> end(Rreceived(Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))
Abbreviations:
msgid_1 = msgid[ttpauth = Auth,sauth = Auth,recipient = PasswdTable(RPwd3_1),!1 = @sid]
k_1 = k[ttpauth = Auth,sauth = Auth,recipient = PasswdTable(RPwd3_1),!1 = @sid]
qtmp_1 = qtmp[ttpauth = Auth,sauth = Auth,recipient = PasswdTable(RPwd3_1),!1 = @sid]

Derivation:
Abbreviations:
msgid_1 = msgid[ttpauth = Auth,sauth = Auth,recipient = PasswdTable(RPwd3_1),!1 = @sid]
k_1 = k[ttpauth = Auth,sauth = Auth,recipient = PasswdTable(RPwd3_1),!1 = @sid]
qtmp_1 = qtmp[ttpauth = Auth,sauth = Auth,recipient = PasswdTable(RPwd3_1),!1 = @sid]
TTPsecchannelFromR_1 = TTPsecchannelFromR[dhpublicR_1 = g,receivername = PasswdTable(RPwd3_1),!1 = @sid_1]
dhsecretTTP_1 = dhsecretTTP[dhpublicR_1 = g,receivername = PasswdTable(RPwd3_1),!1 = @sid_1]
dhsecretR_1 = dhsecretR[!1 = @sid_2]
dhsecretTTP_2 = dhsecretTTP[dhpublicR_1 = exp(g,dhsecretR_1),receivername = PasswdTable(Rpwd[]),!1 = @sid_3]

1. The message PasswdTable(Rpwd[]) may be sent to the attacker at output {6}.
attacker(PasswdTable(Rpwd[])).

2. The message (KEXDHINIT,exp(g,dhsecretR_1)) may be sent to the attacker at output {44}.
attacker((KEXDHINIT,exp(g,dhsecretR_1))).

3. By 2, the attacker may know (KEXDHINIT,exp(g,dhsecretR_1)).
Using the function 2-proj-2-tuple the attacker may obtain exp(g,dhsecretR_1).
attacker(exp(g,dhsecretR_1)).

4. Using the function KEXDHINIT the attacker may obtain KEXDHINIT.
attacker(KEXDHINIT).

5. By 4, the attacker may know KEXDHINIT.
By 3, the attacker may know exp(g,dhsecretR_1).
Using the function 2-tuple the attacker may obtain (KEXDHINIT,exp(g,dhsecretR_1)).
attacker((KEXDHINIT,exp(g,dhsecretR_1))).

6. The message PasswdTable(Rpwd[]) that the attacker may have by 1 may be received at input {70}.
The message (KEXDHINIT,exp(g,dhsecretR_1)) that the attacker may have by 5 may be received at input {71}.
So the message (KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_2),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_2),exp(exp(g,dhsecretR_1),dhsecretTTP_2))))) may be sent on channel PasswdTable(Rpwd[]) at output {76}.
mess(PasswdTable(Rpwd[]),(KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_2),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_2),exp(exp(g,dhsecretR_1),dhsecretTTP_2)))))).

7. We assume as hypothesis that
attacker(RPwd3_1).

8. By 7, the attacker may know RPwd3_1.
Using the function PasswdTable the attacker may obtain PasswdTable(RPwd3_1).
attacker(PasswdTable(RPwd3_1)).

9. Using the function Auth the attacker may obtain Auth.
attacker(Auth).

10. By 9, the attacker may know Auth.
By 9, the attacker may know Auth.
Using the function 2-tuple the attacker may obtain (Auth,Auth).
attacker((Auth,Auth)).

11. The message PasswdTable(RPwd3_1) that the attacker may have by 8 may be received at input {8}.
The message (Auth,Auth) that the attacker may have by 10 may be received at input {9}.
The event Shas(Sname[],k_1,cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))) may be executed at {19}.
So the message (TTPname[],E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))),(Auth,Auth),cleartext[],qtmp_1,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))) may be sent on channel PasswdTable(RPwd3_1) at output {20}.
mess(PasswdTable(RPwd3_1),(TTPname[],E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))),(Auth,Auth),cleartext[],qtmp_1,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))))).

12. By 8, the attacker may have the channel PasswdTable(RPwd3_1).
By 11, the message (TTPname[],E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))),(Auth,Auth),cleartext[],qtmp_1,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))) may be sent on this channel.
So the attacker may obtain the message (TTPname[],E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))),(Auth,Auth),cleartext[],qtmp_1,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))) by listening on this channel.
attacker((TTPname[],E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))),(Auth,Auth),cleartext[],qtmp_1,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))))).

13. By 12, the attacker may know (TTPname[],E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))),(Auth,Auth),cleartext[],qtmp_1,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))).
Using the function 2-proj-6-tuple the attacker may obtain E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))).
attacker(E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))).

14. The attacker initially knows Sname[].
attacker(Sname[]).

15. Using the function g the attacker may obtain g.
attacker(g).

16. By 4, the attacker may know KEXDHINIT.
By 15, the attacker may know g.
Using the function 2-tuple the attacker may obtain (KEXDHINIT,g).
attacker((KEXDHINIT,g)).

17. By 12, the attacker may know (TTPname[],E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))),(Auth,Auth),cleartext[],qtmp_1,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))).
Using the function 5-proj-6-tuple the attacker may obtain qtmp_1.
attacker(qtmp_1).

18. By 8, the attacker may know PasswdTable(RPwd3_1).
By 17, the attacker may know qtmp_1.
Using the function Reply the attacker may obtain Reply(PasswdTable(RPwd3_1),qtmp_1).
attacker(Reply(PasswdTable(RPwd3_1),qtmp_1)).

19. The attacker initially knows cleartext[].
attacker(cleartext[]).

20. By 19, the attacker may know cleartext[].
By 17, the attacker may know qtmp_1.
By 18, the attacker may know Reply(PasswdTable(RPwd3_1),qtmp_1).
By 13, the attacker may know E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))).
Using the function 4-tuple the attacker may obtain (cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))).
attacker((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))).

21. By 20, the attacker may know (cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))).
Using the function H the attacker may obtain H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))).
attacker(H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))).

22. Using the function Wants the attacker may obtain Wants.
attacker(Wants).

23. By 22, the attacker may know Wants.
By 7, the attacker may know RPwd3_1.
By 21, the attacker may know H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))).
Using the function 3-tuple the attacker may obtain (Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))).
attacker((Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))).

24. By 12, the attacker may know (TTPname[],E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))),(Auth,Auth),cleartext[],qtmp_1,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))).
Using the function 6-proj-6-tuple the attacker may obtain A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))).
attacker(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))).

25. By 24, the attacker may know A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))).
By 23, the attacker may know (Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))).
Using the function 2-tuple the attacker may obtain (A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))).
attacker((A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))).

26. Using the function keyMacRtoTTP the attacker may obtain keyMacRtoTTP.
attacker(keyMacRtoTTP).

27. The message PasswdTable(RPwd3_1) that the attacker may have by 8 may be received at input {70}.
The message (KEXDHINIT,g) that the attacker may have by 16 may be received at input {71}.
So the message (KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_1),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))))) may be sent on channel PasswdTable(RPwd3_1) at output {76}.
mess(PasswdTable(RPwd3_1),(KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_1),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1)))))).

28. By 8, the attacker may have the channel PasswdTable(RPwd3_1).
By 27, the message (KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_1),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))))) may be sent on this channel.
So the attacker may obtain the message (KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_1),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))))) by listening on this channel.
attacker((KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_1),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1)))))).

29. By 28, the attacker may know (KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_1),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))))).
Using the function 3-proj-4-tuple the attacker may obtain exp(g,dhsecretTTP_1).
attacker(exp(g,dhsecretTTP_1)).

30. The message Spk(TTPSigKey[]) may be sent to the attacker at output {4}.
attacker(Spk(TTPSigKey[])).

31. By 30, the attacker may know Spk(TTPSigKey[]).
By 15, the attacker may know g.
By 29, the attacker may know exp(g,dhsecretTTP_1).
By 29, the attacker may know exp(g,dhsecretTTP_1).
Using the function 4-tuple the attacker may obtain (Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1)).
attacker((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))).

32. By 31, the attacker may know (Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1)).
Using the function H the attacker may obtain H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))).
attacker(H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1)))).

33. By 29, the attacker may know exp(g,dhsecretTTP_1).
By 32, the attacker may know H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))).
By 26, the attacker may know keyMacRtoTTP.
Using the function 3-tuple the attacker may obtain (exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP).
attacker((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)).

34. By 33, the attacker may know (exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP).
Using the function H the attacker may obtain H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)).
attacker(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP))).

35. By 34, the attacker may know H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)).
By 25, the attacker may know (A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))).
Using the function mac the attacker may obtain mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))).
attacker(mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))).

36. Using the function keyEncRtoTTP the attacker may obtain keyEncRtoTTP.
attacker(keyEncRtoTTP).

37. By 29, the attacker may know exp(g,dhsecretTTP_1).
By 32, the attacker may know H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))).
By 36, the attacker may know keyEncRtoTTP.
Using the function 3-tuple the attacker may obtain (exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP).
attacker((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)).

38. By 37, the attacker may know (exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP).
Using the function H the attacker may obtain H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)).
attacker(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP))).

39. By 38, the attacker may know H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)).
By 25, the attacker may know (A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))).
Using the function E the attacker may obtain E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))).
attacker(E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))).

40. By 39, the attacker may know E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))).
By 35, the attacker may know mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))).
Using the function 2-tuple the attacker may obtain (E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))).
attacker((E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))))).

41. The message PasswdTable(RPwd3_1) that the attacker may have by 8 may be received at input {70}.
The message (KEXDHINIT,g) that the attacker may have by 16 may be received at input {71}.
The message (E(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyEncRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),mac(H((exp(g,dhsecretTTP_1),H((Spk(TTPSigKey[]),g,exp(g,dhsecretTTP_1),exp(g,dhsecretTTP_1))),keyMacRtoTTP)),(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))))) that the attacker may have by 40 may be received at input {88}.
So the message (A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))) may be sent on channel TTPsecchannelFromR_1 at output {91}.
mess(TTPsecchannelFromR_1,(A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))).

42. The message PasswdTable(RPwd3_1) that the attacker may have by 8 may be received at input {70}.
The message (KEXDHINIT,g) that the attacker may have by 16 may be received at input {71}.
The message (A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),(Wants,RPwd3_1,H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))))) that may be sent on channel TTPsecchannelFromR_1 by 41 may be received at input {92}.
The event TTPSendS(Sname[],S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1)))) may be executed at {96}.
So the message S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1))) may be sent on channel Sname[] at output {99}.
mess(Sname[],S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1)))).

43. By 14, the attacker may have the channel Sname[].
By 42, the message S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1))) may be sent on this channel.
So the attacker may obtain the message S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1))) by listening on this channel.
attacker(S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1)))).

44. The message PasswdTable(RPwd3_1) that the attacker may have by 8 may be received at input {8}.
The message (Auth,Auth) that the attacker may have by 10 may be received at input {9}.
The event Shas(Sname[],k_1,cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))) may be executed at {19}.
The message S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1))) that the attacker may have by 43 may be received at input {22}.
So the message (S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1))),Sname[],k_1,cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))) may be sent to the attacker at output {26}.
attacker((S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1))),Sname[],k_1,cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))))).

45. By 44, the attacker may know (S(TTPSigKey[],(Released,A(pk(TTPDecKey[]),(Sname[],(Auth,Auth),(Give,k_1,PasswdTable(RPwd3_1),H((cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))))))),PasswdTable(RPwd3_1))),Sname[],k_1,cleartext[],qtmp_1,Reply(PasswdTable(RPwd3_1),qtmp_1),E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))).
Using the function 3-proj-7-tuple the attacker may obtain k_1.
attacker(k_1).

46. By 45, the attacker may know k_1.
By 13, the attacker may know E(k_1,Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))).
Using the function decE the attacker may obtain Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)).
attacker(Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))).

47. The message (KEXDHREPLY,Spk(TTPSigKey[]),exp(g,dhsecretTTP_2),nmrS(TTPSigKey[],H((Spk(TTPSigKey[]),exp(g,dhsecretR_1),exp(g,dhsecretTTP_2),exp(exp(g,dhsecretR_1),dhsecretTTP_2))))) that may be sent on channel PasswdTable(Rpwd[]) by 6 may be received at input {45}.
The message Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)) that the attacker may have by 46 may be received at input {67}.
So event Rreceived(Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth))) may be executed at {68}.
end(Rreceived(Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))).

48. By 47, end(Rreceived(Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))).
The goal is reached, represented in the following fact:
end(Rreceived(Message(PasswdTable(RPwd3_1),msgid_1,(Auth,Auth)))).


Could not find a trace corresponding to this derivation.
RESULT not event(Rreceived(Message(x_1,y_1,(z,Auth)))) cannot be proved.
COMPUTATIONTIME solving_queries (include completion): 0.716248s
NUMBERIMPLIES solving_queries (include completion): 1741

--------------------------------------------------------------
Verification summary:

Query not event(Rreceived(Message(x_1,y_1,(z,Auth)))) cannot be proved.

--------------------------------------------------------------

