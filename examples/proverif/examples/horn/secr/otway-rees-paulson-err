(* Otway Rees protocol.
   Flawed version, quoted by Paulson TR443 Inductive... *)

pred c/1 decompData, elimVar.

fun host/1.

fun encrypt/2.

query c:secretA[].
query c:secretB[].

not c:shrA[].
not c:shrB[].

reduc

(* attacker *)
c:encrypt(m,k) & c:k -> c:m;
c:x & c:y -> c:encrypt(x,y);
c:host(x);

(* A *)

c:X -> c:(Na[X],host(shrA[]),X, encrypt((Na[X], host(shrA[]), X), shrA[]));

c:(Na[host(shrB[])], encrypt((Na[host(shrB[])],key), shrA[])) -> c:encrypt(secretA[], key);

(* B *)

c:(x,y,host(shrB[]),z) -> c:(x,y,host(shrB[]),z,Nb[y], encrypt((x,y,host(shrB[])), shrB[]));

c:(x,y,host(shrB[]),z) & c:(x,y2,encrypt((Nb[y], key), shrB[])) -> c:(x,y2);

c:(x,host(shrA[]),host(shrB[]),z) & c:(x,y2,encrypt((Nb[host(shrA[])],key), shrB[])) -> c:encrypt(secretB[], key);

(* Server *)

c:(na,host(shra), host(shrb), encrypt((na, host(shra), host(shrb)), shra), nb,
   encrypt((na,host(shra),host(shrb)), shrb)) ->
c:(na,encrypt((na, k[x,shra,shrb]), shra),encrypt((nb,k[x,shra,shrb]), shrb)).

