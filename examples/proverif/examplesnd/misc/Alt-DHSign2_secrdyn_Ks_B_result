Linear part:
exp(exp(g(),x_4),y_5) = exp(exp(g(),y_5),x_4)
Completing equations...
Completed equations:
exp(exp(g(),x_4),y_5) = exp(exp(g(),y_5),x_4)
Convergent part:
Completing equations...
Completed equations:
Completed destructors:
getmess(sign(m_280,k_281)) => m_280
checksign(sign(m_282,k_283),pk(k_283)) => m_282
sdec(senc(x_284,y_285),y_285) => x_284
not(false()) => true()
not(true()) => false()
Process:
new skA_175: pkey;
{317}let pkA_176: Pkey = pk(skA_175) in
new skB_177: pkey;
{318}let pkB_178: Pkey = pk(skB_177) in
{319}out(c, pkA_176);
{320}out(c, pkB_178);
(
    {432}!
    {433}in(c, X_237: host);
    {434}if X_237 = A then
        {457}if X_237 = A then
            {468}let skX_262: pkey = skA_175 in
            {469}let pkX_263: Pkey = pk(skX_262) in
            new ra_264: exponent;
            {470}out(c, (pkX_263,exp(g(),ra_264)));
            {471}in(c, (pkY_265: Pkey,m1_266: G,m2_267: bitstring));
            {472}let (=G_to_bitstring(exp(g(),ra_264)),=G_to_bitstring(m1_266),=Pkey_to_bitstring(pkX_263)) = checksign(m2_267,pkY_265) in
            {473}let Ks_268: bitstring = hash(G_to_bitstring(exp(m1_266,ra_264))) in
            {474}out(c, sign((G_to_bitstring(m1_266),G_to_bitstring(exp(g(),ra_264)),Pkey_to_bitstring(pkY_265)),skX_262));
            {475}in(ch, pkXX_269: Pkey);
            {476}if pkY_265 = pkXX_269 then
                0
            else
                {477}out(c, Ks_268);
                0
        else
            {458}let skX_254: pkey = skB_177 in
            {459}let pkX_255: Pkey = pk(skX_254) in
            new ra_256: exponent;
            {460}out(c, (pkX_255,exp(g(),ra_256)));
            {461}in(c, (pkY_257: Pkey,m1_258: G,m2_259: bitstring));
            {462}let (=G_to_bitstring(exp(g(),ra_256)),=G_to_bitstring(m1_258),=Pkey_to_bitstring(pkX_255)) = checksign(m2_259,pkY_257) in
            {463}let Ks_260: bitstring = hash(G_to_bitstring(exp(m1_258,ra_256))) in
            {464}out(c, sign((G_to_bitstring(m1_258),G_to_bitstring(exp(g(),ra_256)),Pkey_to_bitstring(pkY_257)),skX_254));
            {465}in(ch, pkXX_261: Pkey);
            {466}if pkY_257 = pkXX_261 then
                0
            else
                {467}out(c, Ks_260);
                0
    else
        {435}if X_237 = B then
        {436}if X_237 = A then
            {447}let skX_246: pkey = skA_175 in
            {448}let pkX_247: Pkey = pk(skX_246) in
            new ra_248: exponent;
            {449}out(c, (pkX_247,exp(g(),ra_248)));
            {450}in(c, (pkY_249: Pkey,m1_250: G,m2_251: bitstring));
            {451}let (=G_to_bitstring(exp(g(),ra_248)),=G_to_bitstring(m1_250),=Pkey_to_bitstring(pkX_247)) = checksign(m2_251,pkY_249) in
            {452}let Ks_252: bitstring = hash(G_to_bitstring(exp(m1_250,ra_248))) in
            {453}out(c, sign((G_to_bitstring(m1_250),G_to_bitstring(exp(g(),ra_248)),Pkey_to_bitstring(pkY_249)),skX_246));
            {454}in(ch, pkXX_253: Pkey);
            {455}if pkY_249 = pkXX_253 then
                0
            else
                {456}out(c, Ks_252);
                0
        else
            {437}let skX_238: pkey = skB_177 in
            {438}let pkX_239: Pkey = pk(skX_238) in
            new ra_240: exponent;
            {439}out(c, (pkX_239,exp(g(),ra_240)));
            {440}in(c, (pkY_241: Pkey,m1_242: G,m2_243: bitstring));
            {441}let (=G_to_bitstring(exp(g(),ra_240)),=G_to_bitstring(m1_242),=Pkey_to_bitstring(pkX_239)) = checksign(m2_243,pkY_241) in
            {442}let Ks_244: bitstring = hash(G_to_bitstring(exp(m1_242,ra_240))) in
            {443}out(c, sign((G_to_bitstring(m1_242),G_to_bitstring(exp(g(),ra_240)),Pkey_to_bitstring(pkY_241)),skX_238));
            {444}in(ch, pkXX_245: Pkey);
            {445}if pkY_241 = pkXX_245 then
                0
            else
                {446}out(c, Ks_244);
                0
) | (
    {394}!
    {395}in(c, Y_208: host);
    {396}if Y_208 = A then
        {415}if Y_208 = A then
            {424}let skY_230: pkey = skA_175 in
            {425}let pkY_231: Pkey = pk(skY_230) in
            {426}in(c, (pkX_232: Pkey,m1_233: G));
            new rb_234: exponent;
            {427}out(c, (pkY_231,exp(g(),rb_234),sign((G_to_bitstring(m1_233),G_to_bitstring(exp(g(),rb_234)),Pkey_to_bitstring(pkX_232)),skY_230)));
            {428}in(c, m2_235: bitstring);
            {429}let (=G_to_bitstring(exp(g(),rb_234)),=G_to_bitstring(m1_233),=Pkey_to_bitstring(pkY_231)) = checksign(m2_235,pkX_232) in
            {430}let Ks_236: bitstring = hash(G_to_bitstring(exp(m1_233,rb_234))) in
            {431}out(c, Ks_236);
            0
        else
            {416}let skY_223: pkey = skB_177 in
            {417}let pkY_224: Pkey = pk(skY_223) in
            {418}in(c, (pkX_225: Pkey,m1_226: G));
            new rb_227: exponent;
            {419}out(c, (pkY_224,exp(g(),rb_227),sign((G_to_bitstring(m1_226),G_to_bitstring(exp(g(),rb_227)),Pkey_to_bitstring(pkX_225)),skY_223)));
            {420}in(c, m2_228: bitstring);
            {421}let (=G_to_bitstring(exp(g(),rb_227)),=G_to_bitstring(m1_226),=Pkey_to_bitstring(pkY_224)) = checksign(m2_228,pkX_225) in
            {422}let Ks_229: bitstring = hash(G_to_bitstring(exp(m1_226,rb_227))) in
            {423}out(c, Ks_229);
            0
    else
        {397}if Y_208 = B then
        {398}if Y_208 = A then
            {407}let skY_216: pkey = skA_175 in
            {408}let pkY_217: Pkey = pk(skY_216) in
            {409}in(c, (pkX_218: Pkey,m1_219: G));
            new rb_220: exponent;
            {410}out(c, (pkY_217,exp(g(),rb_220),sign((G_to_bitstring(m1_219),G_to_bitstring(exp(g(),rb_220)),Pkey_to_bitstring(pkX_218)),skY_216)));
            {411}in(c, m2_221: bitstring);
            {412}let (=G_to_bitstring(exp(g(),rb_220)),=G_to_bitstring(m1_219),=Pkey_to_bitstring(pkY_217)) = checksign(m2_221,pkX_218) in
            {413}let Ks_222: bitstring = hash(G_to_bitstring(exp(m1_219,rb_220))) in
            {414}out(c, Ks_222);
            0
        else
            {399}let skY_209: pkey = skB_177 in
            {400}let pkY_210: Pkey = pk(skY_209) in
            {401}in(c, (pkX_211: Pkey,m1_212: G));
            new rb_213: exponent;
            {402}out(c, (pkY_210,exp(g(),rb_213),sign((G_to_bitstring(m1_212),G_to_bitstring(exp(g(),rb_213)),Pkey_to_bitstring(pkX_211)),skY_209)));
            {403}in(c, m2_214: bitstring);
            {404}let (=G_to_bitstring(exp(g(),rb_213)),=G_to_bitstring(m1_212),=Pkey_to_bitstring(pkY_210)) = checksign(m2_214,pkX_211) in
            {405}let Ks_215: bitstring = hash(G_to_bitstring(exp(m1_212,rb_213))) in
            {406}out(c, Ks_215);
            0
) | (
    {321}in(c, Y_179: host);
    {322}if Y_179 = A then
        {359}if Y_179 = A then
            {377}let skY_201: pkey = skA_175 in
            {378}let pkY_202: Pkey = pk(skY_201) in
            {379}in(c, (pkX_203: Pkey,m1_204: G));
            new rb_205: exponent;
            {380}out(c, (pkY_202,exp(g(),rb_205),sign((G_to_bitstring(m1_204),G_to_bitstring(exp(g(),rb_205)),Pkey_to_bitstring(pkX_203)),skY_201)));
            {381}in(c, m2_206: bitstring);
            {382}let (=G_to_bitstring(exp(g(),rb_205)),=G_to_bitstring(m1_204),=Pkey_to_bitstring(pkY_202)) = checksign(m2_206,pkX_203) in
            {383}let Ks_207: bitstring = hash(G_to_bitstring(exp(m1_204,rb_205))) in
            {384}out(ch, pkY_202);
            {385}if pkX_203 = pk(skA_175) then
                {389}if pkY_202 = pk(skB_177) then
                    {393}out(c, senc(secret,Ks_207));
                    0
                else
                    {390}if pkX_203 = pk(skB_177) then
                    {391}if pkY_202 = pk(skA_175) then
                    {392}out(c, senc(secret,Ks_207));
                    0
            else
                {386}if pkX_203 = pk(skB_177) then
                {387}if pkY_202 = pk(skA_175) then
                {388}out(c, senc(secret,Ks_207));
                0
        else
            {360}let skY_194: pkey = skB_177 in
            {361}let pkY_195: Pkey = pk(skY_194) in
            {362}in(c, (pkX_196: Pkey,m1_197: G));
            new rb_198: exponent;
            {363}out(c, (pkY_195,exp(g(),rb_198),sign((G_to_bitstring(m1_197),G_to_bitstring(exp(g(),rb_198)),Pkey_to_bitstring(pkX_196)),skY_194)));
            {364}in(c, m2_199: bitstring);
            {365}let (=G_to_bitstring(exp(g(),rb_198)),=G_to_bitstring(m1_197),=Pkey_to_bitstring(pkY_195)) = checksign(m2_199,pkX_196) in
            {366}let Ks_200: bitstring = hash(G_to_bitstring(exp(m1_197,rb_198))) in
            {367}out(ch, pkY_195);
            {368}if pkX_196 = pk(skA_175) then
                {372}if pkY_195 = pk(skB_177) then
                    {376}out(c, senc(secret,Ks_200));
                    0
                else
                    {373}if pkX_196 = pk(skB_177) then
                    {374}if pkY_195 = pk(skA_175) then
                    {375}out(c, senc(secret,Ks_200));
                    0
            else
                {369}if pkX_196 = pk(skB_177) then
                {370}if pkY_195 = pk(skA_175) then
                {371}out(c, senc(secret,Ks_200));
                0
    else
        {323}if Y_179 = A then
        {324}if Y_179 = A then
            {342}let skY_187: pkey = skA_175 in
            {343}let pkY_188: Pkey = pk(skY_187) in
            {344}in(c, (pkX_189: Pkey,m1_190: G));
            new rb_191: exponent;
            {345}out(c, (pkY_188,exp(g(),rb_191),sign((G_to_bitstring(m1_190),G_to_bitstring(exp(g(),rb_191)),Pkey_to_bitstring(pkX_189)),skY_187)));
            {346}in(c, m2_192: bitstring);
            {347}let (=G_to_bitstring(exp(g(),rb_191)),=G_to_bitstring(m1_190),=Pkey_to_bitstring(pkY_188)) = checksign(m2_192,pkX_189) in
            {348}let Ks_193: bitstring = hash(G_to_bitstring(exp(m1_190,rb_191))) in
            {349}out(ch, pkY_188);
            {350}if pkX_189 = pk(skA_175) then
                {354}if pkY_188 = pk(skB_177) then
                    {358}out(c, senc(secret,Ks_193));
                    0
                else
                    {355}if pkX_189 = pk(skB_177) then
                    {356}if pkY_188 = pk(skA_175) then
                    {357}out(c, senc(secret,Ks_193));
                    0
            else
                {351}if pkX_189 = pk(skB_177) then
                {352}if pkY_188 = pk(skA_175) then
                {353}out(c, senc(secret,Ks_193));
                0
        else
            {325}let skY_180: pkey = skB_177 in
            {326}let pkY_181: Pkey = pk(skY_180) in
            {327}in(c, (pkX_182: Pkey,m1_183: G));
            new rb_184: exponent;
            {328}out(c, (pkY_181,exp(g(),rb_184),sign((G_to_bitstring(m1_183),G_to_bitstring(exp(g(),rb_184)),Pkey_to_bitstring(pkX_182)),skY_180)));
            {329}in(c, m2_185: bitstring);
            {330}let (=G_to_bitstring(exp(g(),rb_184)),=G_to_bitstring(m1_183),=Pkey_to_bitstring(pkY_181)) = checksign(m2_185,pkX_182) in
            {331}let Ks_186: bitstring = hash(G_to_bitstring(exp(m1_183,rb_184))) in
            {332}out(ch, pkY_181);
            {333}if pkX_182 = pk(skA_175) then
                {337}if pkY_181 = pk(skB_177) then
                    {341}out(c, senc(secret,Ks_186));
                    0
                else
                    {338}if pkX_182 = pk(skB_177) then
                    {339}if pkY_181 = pk(skA_175) then
                    {340}out(c, senc(secret,Ks_186));
                    0
            else
                {334}if pkX_182 = pk(skB_177) then
                {335}if pkY_181 = pk(skA_175) then
                {336}out(c, senc(secret,Ks_186));
                0
)

-- Query not attacker_bitstring(secret[])
Completing...
200 rules inserted. The rule base contains 108 rules. 49 rules in the queue.
400 rules inserted. The rule base contains 139 rules. 21 rules in the queue.
Starting query not attacker_bitstring(secret[])
goal reachable: attacker_bitstring(secret[])
Abbreviations:
ra_3881 = ra_240[X = B[],!1 = @sid_3875]
rb_3882 = rb_205[m1 = exp(g(),ra_3881),pkX = pk(skB_177[]),Y = A[]]
rb_3883 = rb_205[m1 = m1_3823,pkX = pk(k_3824),Y = A[]]

1. The attacker initially knows B[].
attacker_host(B[]).

2. The attacker has some term k_3847.
attacker_pkey(k_3847).

3. The message pk(skB_177[]) may be sent to the attacker at output {320}.
attacker_Pkey(pk(skB_177[])).

4. By 3, the attacker may know pk(skB_177[]).
Using the function Pkey_to_bitstring the attacker may obtain Pkey_to_bitstring(pk(skB_177[])).
attacker_bitstring(Pkey_to_bitstring(pk(skB_177[]))).

5. The attacker initially knows A[].
attacker_host(A[]).

6. The message B[] that the attacker may have by 1 may be received at input {433}.
So the message (pk(skB_177[]),exp(g(),ra_3881)) may be sent to the attacker at output {439}.
attacker_bitstring((pk(skB_177[]),exp(g(),ra_3881))).

7. By 6, the attacker may know (pk(skB_177[]),exp(g(),ra_3881)).
Using the 1th inverse of function Pkey-G-tuple the attacker may obtain exp(g(),ra_3881).
attacker_G(exp(g(),ra_3881)).

8. By 3, the attacker may know pk(skB_177[]).
By 7, the attacker may know exp(g(),ra_3881).
Using the function Pkey-G-tuple the attacker may obtain (pk(skB_177[]),exp(g(),ra_3881)).
attacker_bitstring((pk(skB_177[]),exp(g(),ra_3881))).

9. The message A[] that the attacker may have by 5 may be received at input {321}.
The message (pk(skB_177[]),exp(g(),ra_3881)) that the attacker may have by 8 may be received at input {379}.
So the message (pk(skA_175[]),exp(g(),rb_3882),sign((G_to_bitstring(exp(g(),ra_3881)),G_to_bitstring(exp(g(),rb_3882)),Pkey_to_bitstring(pk(skB_177[]))),skA_175[])) may be sent to the attacker at output {380}.
attacker_bitstring((pk(skA_175[]),exp(g(),rb_3882),sign((G_to_bitstring(exp(g(),ra_3881)),G_to_bitstring(exp(g(),rb_3882)),Pkey_to_bitstring(pk(skB_177[]))),skA_175[]))).

10. By 9, the attacker may know (pk(skA_175[]),exp(g(),rb_3882),sign((G_to_bitstring(exp(g(),ra_3881)),G_to_bitstring(exp(g(),rb_3882)),Pkey_to_bitstring(pk(skB_177[]))),skA_175[])).
Using the 1th inverse of function Pkey-G-bitstring-tuple the attacker may obtain exp(g(),rb_3882).
attacker_G(exp(g(),rb_3882)).

11. By 10, the attacker may know exp(g(),rb_3882).
Using the function G_to_bitstring the attacker may obtain G_to_bitstring(exp(g(),rb_3882)).
attacker_bitstring(G_to_bitstring(exp(g(),rb_3882))).

12. By 7, the attacker may know exp(g(),ra_3881).
Using the function G_to_bitstring the attacker may obtain G_to_bitstring(exp(g(),ra_3881)).
attacker_bitstring(G_to_bitstring(exp(g(),ra_3881))).

13. By 12, the attacker may know G_to_bitstring(exp(g(),ra_3881)).
By 11, the attacker may know G_to_bitstring(exp(g(),rb_3882)).
By 4, the attacker may know Pkey_to_bitstring(pk(skB_177[])).
Using the function bitstring-bitstring-bitstring-tuple the attacker may obtain (G_to_bitstring(exp(g(),ra_3881)),G_to_bitstring(exp(g(),rb_3882)),Pkey_to_bitstring(pk(skB_177[]))).
attacker_bitstring((G_to_bitstring(exp(g(),ra_3881)),G_to_bitstring(exp(g(),rb_3882)),Pkey_to_bitstring(pk(skB_177[])))).

14. By 13, the attacker may know (G_to_bitstring(exp(g(),ra_3881)),G_to_bitstring(exp(g(),rb_3882)),Pkey_to_bitstring(pk(skB_177[]))).
By 2, the attacker may know k_3847.
Using the function sign the attacker may obtain sign((G_to_bitstring(exp(g(),ra_3881)),G_to_bitstring(exp(g(),rb_3882)),Pkey_to_bitstring(pk(skB_177[]))),k_3847).
attacker_bitstring(sign((G_to_bitstring(exp(g(),ra_3881)),G_to_bitstring(exp(g(),rb_3882)),Pkey_to_bitstring(pk(skB_177[]))),k_3847)).

15. By 2, the attacker may know k_3847.
Using the function pk the attacker may obtain pk(k_3847).
attacker_Pkey(pk(k_3847)).

16. By 15, the attacker may know pk(k_3847).
By 10, the attacker may know exp(g(),rb_3882).
By 14, the attacker may know sign((G_to_bitstring(exp(g(),ra_3881)),G_to_bitstring(exp(g(),rb_3882)),Pkey_to_bitstring(pk(skB_177[]))),k_3847).
Using the function Pkey-G-bitstring-tuple the attacker may obtain (pk(k_3847),exp(g(),rb_3882),sign((G_to_bitstring(exp(g(),ra_3881)),G_to_bitstring(exp(g(),rb_3882)),Pkey_to_bitstring(pk(skB_177[]))),k_3847)).
attacker_bitstring((pk(k_3847),exp(g(),rb_3882),sign((G_to_bitstring(exp(g(),ra_3881)),G_to_bitstring(exp(g(),rb_3882)),Pkey_to_bitstring(pk(skB_177[]))),k_3847))).

17. The attacker has some term m1_3823.
attacker_G(m1_3823).

18. The attacker has some term k_3824.
attacker_pkey(k_3824).

19. By 18, the attacker may know k_3824.
Using the function pk the attacker may obtain pk(k_3824).
attacker_Pkey(pk(k_3824)).

20. By 19, the attacker may know pk(k_3824).
By 17, the attacker may know m1_3823.
Using the function Pkey-G-tuple the attacker may obtain (pk(k_3824),m1_3823).
attacker_bitstring((pk(k_3824),m1_3823)).

21. The message pk(skA_175[]) may be sent to the attacker at output {319}.
attacker_Pkey(pk(skA_175[])).

22. By 21, the attacker may know pk(skA_175[]).
Using the function Pkey_to_bitstring the attacker may obtain Pkey_to_bitstring(pk(skA_175[])).
attacker_bitstring(Pkey_to_bitstring(pk(skA_175[]))).

23. By 17, the attacker may know m1_3823.
Using the function G_to_bitstring the attacker may obtain G_to_bitstring(m1_3823).
attacker_bitstring(G_to_bitstring(m1_3823)).

24. The message A[] that the attacker may have by 5 may be received at input {321}.
The message (pk(k_3824),m1_3823) that the attacker may have by 20 may be received at input {379}.
So the message (pk(skA_175[]),exp(g(),rb_3883),sign((G_to_bitstring(m1_3823),G_to_bitstring(exp(g(),rb_3883)),Pkey_to_bitstring(pk(k_3824))),skA_175[])) may be sent to the attacker at output {380}.
attacker_bitstring((pk(skA_175[]),exp(g(),rb_3883),sign((G_to_bitstring(m1_3823),G_to_bitstring(exp(g(),rb_3883)),Pkey_to_bitstring(pk(k_3824))),skA_175[]))).

25. By 24, the attacker may know (pk(skA_175[]),exp(g(),rb_3883),sign((G_to_bitstring(m1_3823),G_to_bitstring(exp(g(),rb_3883)),Pkey_to_bitstring(pk(k_3824))),skA_175[])).
Using the 1th inverse of function Pkey-G-bitstring-tuple the attacker may obtain exp(g(),rb_3883).
attacker_G(exp(g(),rb_3883)).

26. By 25, the attacker may know exp(g(),rb_3883).
Using the function G_to_bitstring the attacker may obtain G_to_bitstring(exp(g(),rb_3883)).
attacker_bitstring(G_to_bitstring(exp(g(),rb_3883))).

27. By 26, the attacker may know G_to_bitstring(exp(g(),rb_3883)).
By 23, the attacker may know G_to_bitstring(m1_3823).
By 22, the attacker may know Pkey_to_bitstring(pk(skA_175[])).
Using the function bitstring-bitstring-bitstring-tuple the attacker may obtain (G_to_bitstring(exp(g(),rb_3883)),G_to_bitstring(m1_3823),Pkey_to_bitstring(pk(skA_175[]))).
attacker_bitstring((G_to_bitstring(exp(g(),rb_3883)),G_to_bitstring(m1_3823),Pkey_to_bitstring(pk(skA_175[])))).

28. By 27, the attacker may know (G_to_bitstring(exp(g(),rb_3883)),G_to_bitstring(m1_3823),Pkey_to_bitstring(pk(skA_175[]))).
By 18, the attacker may know k_3824.
Using the function sign the attacker may obtain sign((G_to_bitstring(exp(g(),rb_3883)),G_to_bitstring(m1_3823),Pkey_to_bitstring(pk(skA_175[]))),k_3824).
attacker_bitstring(sign((G_to_bitstring(exp(g(),rb_3883)),G_to_bitstring(m1_3823),Pkey_to_bitstring(pk(skA_175[]))),k_3824)).

29. The message A[] that the attacker may have by 5 may be received at input {321}.
The message (pk(k_3824),m1_3823) that the attacker may have by 20 may be received at input {379}.
The message sign((G_to_bitstring(exp(g(),rb_3883)),G_to_bitstring(m1_3823),Pkey_to_bitstring(pk(skA_175[]))),k_3824) that the attacker may have by 28 may be received at input {381}.
So the message pk(skA_175[]) may be sent on channel ch[] at output {384}.
mess_Pkey(ch[],pk(skA_175[])).

30. The message B[] that the attacker may have by 1 may be received at input {433}.
The message (pk(k_3847),exp(g(),rb_3882),sign((G_to_bitstring(exp(g(),ra_3881)),G_to_bitstring(exp(g(),rb_3882)),Pkey_to_bitstring(pk(skB_177[]))),k_3847)) that the attacker may have by 16 may be received at input {440}.
The message pk(skA_175[]) that may be sent on channel ch[] by 29 may be received at input {444}.
We have pk(skA_175[]) <> pk(k_3847).
So the message hash(G_to_bitstring(exp(exp(g(),ra_3881),rb_3882))) may be sent to the attacker at output {446}.
attacker_bitstring(hash(G_to_bitstring(exp(exp(g(),ra_3881),rb_3882)))).

31. The message B[] that the attacker may have by 1 may be received at input {433}.
The message (pk(skA_175[]),exp(g(),rb_3882),sign((G_to_bitstring(exp(g(),ra_3881)),G_to_bitstring(exp(g(),rb_3882)),Pkey_to_bitstring(pk(skB_177[]))),skA_175[])) that the attacker may have by 9 may be received at input {440}.
So the message sign((G_to_bitstring(exp(g(),rb_3882)),G_to_bitstring(exp(g(),ra_3881)),Pkey_to_bitstring(pk(skA_175[]))),skB_177[]) may be sent to the attacker at output {443}.
attacker_bitstring(sign((G_to_bitstring(exp(g(),rb_3882)),G_to_bitstring(exp(g(),ra_3881)),Pkey_to_bitstring(pk(skA_175[]))),skB_177[])).

32. The message A[] that the attacker may have by 5 may be received at input {321}.
The message (pk(skB_177[]),exp(g(),ra_3881)) that the attacker may have by 8 may be received at input {379}.
The message sign((G_to_bitstring(exp(g(),rb_3882)),G_to_bitstring(exp(g(),ra_3881)),Pkey_to_bitstring(pk(skA_175[]))),skB_177[]) that the attacker may have by 31 may be received at input {381}.
So the message senc(secret[],hash(G_to_bitstring(exp(exp(g(),ra_3881),rb_3882)))) may be sent to the attacker at output {388}.
attacker_bitstring(senc(secret[],hash(G_to_bitstring(exp(exp(g(),ra_3881),rb_3882))))).

33. By 32, the attacker may know senc(secret[],hash(G_to_bitstring(exp(exp(g(),ra_3881),rb_3882)))).
By 30, the attacker may know hash(G_to_bitstring(exp(exp(g(),ra_3881),rb_3882))).
Using the function sdec the attacker may obtain secret[].
attacker_bitstring(secret[]).


Trying unification (pk(skA_175[]),exp(g(),rb_205[m1 = exp(g(),ra_240[X = B[],!1 = @sid_3875]),pkX = pk(skB_177[]),Y = A[]]),sign((G_to_bitstring(exp(g(),ra_240[X = B[],!1 = @sid_3875])),G_to_bitstring(exp(g(),rb_205[m1 = exp(g(),ra_240[X = B[],!1 = @sid_3875]),pkX = pk(skB_177[]),Y = A[]])),Pkey_to_bitstring(pk(skB_177[]))),skA_175[])),(pk(skB_177[]),exp(g(),ra_240[X = B[],!1 = @sid_3875])),(pk(skB_177[]),exp(g(),ra_240[X = B[],!1 = @sid_3875])),(pk(skA_175[]),exp(g(),rb_205[m1 = m1_3823,pkX = pk(k_3824),Y = A[]]),sign((G_to_bitstring(m1_3823),G_to_bitstring(exp(g(),rb_205[m1 = m1_3823,pkX = pk(k_3824),Y = A[]])),Pkey_to_bitstring(pk(k_3824))),skA_175[])),(pk(k_3824),m1_3823),(pk(k_3824),m1_3823),(pk(k_3824),m1_3823),sign((G_to_bitstring(exp(g(),rb_205[m1 = m1_3823,pkX = pk(k_3824),Y = A[]])),G_to_bitstring(m1_3823),Pkey_to_bitstring(pk(skA_175[]))),k_3824),(pk(k_3824),m1_3823),(pk(k_3847),exp(g(),rb_205[m1 = exp(g(),ra_240[X = B[],!1 = @sid_3875]),pkX = pk(skB_177[]),Y = A[]]),sign((G_to_bitstring(exp(g(),ra_240[X = B[],!1 = @sid_3875])),G_to_bitstring(exp(g(),rb_205[m1 = exp(g(),ra_240[X = B[],!1 = @sid_3875]),pkX = pk(skB_177[]),Y = A[]])),Pkey_to_bitstring(pk(skB_177[]))),k_3847)),(pk(skA_175[]),exp(g(),rb_205[m1 = exp(g(),ra_240[X = B[],!1 = @sid_3875]),pkX = pk(skB_177[]),Y = A[]]),sign((G_to_bitstring(exp(g(),ra_240[X = B[],!1 = @sid_3875])),G_to_bitstring(exp(g(),rb_205[m1 = exp(g(),ra_240[X = B[],!1 = @sid_3875]),pkX = pk(skB_177[]),Y = A[]])),Pkey_to_bitstring(pk(skB_177[]))),skA_175[])),(pk(skB_177[]),exp(g(),ra_240[X = B[],!1 = @sid_3875])),sign((G_to_bitstring(exp(g(),rb_205[m1 = exp(g(),ra_240[X = B[],!1 = @sid_3875]),pkX = pk(skB_177[]),Y = A[]])),G_to_bitstring(exp(g(),ra_240[X = B[],!1 = @sid_3875])),Pkey_to_bitstring(pk(skA_175[]))),skB_177[]),(pk(skB_177[]),exp(g(),ra_240[X = B[],!1 = @sid_3875])) with (pk(skA_175[]),exp(g(),rb_205[m1 = m1_3823,pkX = pk(k_3824),Y = A[]]),sign((G_to_bitstring(m1_3823),G_to_bitstring(exp(g(),rb_205[m1 = m1_3823,pkX = pk(k_3824),Y = A[]])),Pkey_to_bitstring(pk(k_3824))),skA_175[])),(pk(k_3824),m1_3823),(pk(k_3824),m1_3823),(pk(skA_175[]),exp(g(),rb_205[m1 = exp(g(),ra_240[X = B[],!1 = @sid_3875]),pkX = pk(skB_177[]),Y = A[]]),sign((G_to_bitstring(exp(g(),ra_240[X = B[],!1 = @sid_3875])),G_to_bitstring(exp(g(),rb_205[m1 = exp(g(),ra_240[X = B[],!1 = @sid_3875]),pkX = pk(skB_177[]),Y = A[]])),Pkey_to_bitstring(pk(skB_177[]))),skA_175[])),(pk(skB_177[]),exp(g(),ra_240[X = B[],!1 = @sid_3875])),(pk(skB_177[]),exp(g(),ra_240[X = B[],!1 = @sid_3875])),(pk(skB_177[]),exp(g(),ra_240[X = B[],!1 = @sid_3875])),sign((G_to_bitstring(exp(g(),rb_205[m1 = exp(g(),ra_240[X = B[],!1 = @sid_3875]),pkX = pk(skB_177[]),Y = A[]])),G_to_bitstring(exp(g(),ra_240[X = B[],!1 = @sid_3875])),Pkey_to_bitstring(pk(skA_175[]))),skB_177[]),(pk(skB_177[]),exp(g(),ra_240[X = B[],!1 = @sid_3875])),(pk(skA_175[]),exp(g(),rb_205[m1 = exp(g(),ra_240[X = B[],!1 = @sid_3875]),pkX = pk(skB_177[]),Y = A[]]),sign((G_to_bitstring(exp(g(),ra_240[X = B[],!1 = @sid_3875])),G_to_bitstring(exp(g(),rb_205[m1 = exp(g(),ra_240[X = B[],!1 = @sid_3875]),pkX = pk(skB_177[]),Y = A[]])),Pkey_to_bitstring(pk(skB_177[]))),skA_175[])),(pk(k_3847),exp(g(),rb_205[m1 = exp(g(),ra_240[X = B[],!1 = @sid_3875]),pkX = pk(skB_177[]),Y = A[]]),sign((G_to_bitstring(exp(g(),ra_240[X = B[],!1 = @sid_3875])),G_to_bitstring(exp(g(),rb_205[m1 = exp(g(),ra_240[X = B[],!1 = @sid_3875]),pkX = pk(skB_177[]),Y = A[]])),Pkey_to_bitstring(pk(skB_177[]))),k_3847)),(pk(k_3824),m1_3823),sign((G_to_bitstring(exp(g(),rb_205[m1 = m1_3823,pkX = pk(k_3824),Y = A[]])),G_to_bitstring(m1_3823),Pkey_to_bitstring(pk(skA_175[]))),k_3824),(pk(k_3824),m1_3823) succeeded.
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
Unification made an inequality become false.
Trying with the initial derivation tree instead.
Could not find a trace corresponding to this derivation.
RESULT not attacker_bitstring(secret[]) cannot be proved.
