free c:channel.

event A.
event B.

free a:bitstring[private].
free b:bitstring[private].

free d:bitstring.
free e:bitstring.


type stamp.
event Unique(stamp,bitstring).

axiom st:stamp, x:bitstring, x':bitstring;
  event(Unique(st,x)) && event(Unique(st,x')) ==> x = x'.

process
  new st1:stamp;
  new st2:stamp;
  in(c,(i:nat,x:bitstring));
  event Unique(st1,(i,x));
  in(c,(j:nat,y:bitstring));
  event Unique(st2,(j,y));
  if x = e
  then
    (if is_nat(j) then
    if is_nat(i) then
    if i > j -5
    then out(c,choice[a,b])
    else out(c,choice[e,d])
    )
  else
  (if is_nat(i) then
  if is_nat(j) then
  if j <= i - 3
  then out(c,choice[e,a])
  else out(c,choice[b,d])
  )
